// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ZMQMessages.proto

package org.opencog.atomspace;

public final class AtomSpaceProtos {
  private AtomSpaceProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code ZMQTruthValueType}
   */
  public enum ZMQTruthValueType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ZMQTruthValueTypeSimple = 0;</code>
     */
    ZMQTruthValueTypeSimple(0, 0),
    /**
     * <code>ZMQTruthValueTypeCount = 1;</code>
     */
    ZMQTruthValueTypeCount(1, 1),
    /**
     * <code>ZMQTruthValueTypeNull = 2;</code>
     */
    ZMQTruthValueTypeNull(2, 2),
    /**
     * <code>ZMQTruthValueTypeIndefinite = 3;</code>
     */
    ZMQTruthValueTypeIndefinite(3, 3),
    /**
     * <code>ZMQTruthValueTypeComposite = 4;</code>
     */
    ZMQTruthValueTypeComposite(4, 4),
    ;

    /**
     * <code>ZMQTruthValueTypeSimple = 0;</code>
     */
    public static final int ZMQTruthValueTypeSimple_VALUE = 0;
    /**
     * <code>ZMQTruthValueTypeCount = 1;</code>
     */
    public static final int ZMQTruthValueTypeCount_VALUE = 1;
    /**
     * <code>ZMQTruthValueTypeNull = 2;</code>
     */
    public static final int ZMQTruthValueTypeNull_VALUE = 2;
    /**
     * <code>ZMQTruthValueTypeIndefinite = 3;</code>
     */
    public static final int ZMQTruthValueTypeIndefinite_VALUE = 3;
    /**
     * <code>ZMQTruthValueTypeComposite = 4;</code>
     */
    public static final int ZMQTruthValueTypeComposite_VALUE = 4;


    public final int getNumber() { return value; }

    public static ZMQTruthValueType valueOf(int value) {
      switch (value) {
        case 0: return ZMQTruthValueTypeSimple;
        case 1: return ZMQTruthValueTypeCount;
        case 2: return ZMQTruthValueTypeNull;
        case 3: return ZMQTruthValueTypeIndefinite;
        case 4: return ZMQTruthValueTypeComposite;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ZMQTruthValueType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ZMQTruthValueType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ZMQTruthValueType>() {
            public ZMQTruthValueType findValueByNumber(int number) {
              return ZMQTruthValueType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.opencog.atomspace.AtomSpaceProtos.getDescriptor().getEnumTypes().get(0);
    }

    private static final ZMQTruthValueType[] VALUES = values();

    public static ZMQTruthValueType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private ZMQTruthValueType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ZMQTruthValueType)
  }

  /**
   * Protobuf enum {@code ZMQAtomType}
   */
  public enum ZMQAtomType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ZMQAtomTypeNode = 0;</code>
     */
    ZMQAtomTypeNode(0, 0),
    /**
     * <code>ZMQAtomTypeLink = 1;</code>
     */
    ZMQAtomTypeLink(1, 1),
    /**
     * <code>ZMQAtomTypeNotFound = 2;</code>
     *
     * <pre>
     * Requested node/link was not found
     * </pre>
     */
    ZMQAtomTypeNotFound(2, 2),
    ;

    /**
     * <code>ZMQAtomTypeNode = 0;</code>
     */
    public static final int ZMQAtomTypeNode_VALUE = 0;
    /**
     * <code>ZMQAtomTypeLink = 1;</code>
     */
    public static final int ZMQAtomTypeLink_VALUE = 1;
    /**
     * <code>ZMQAtomTypeNotFound = 2;</code>
     *
     * <pre>
     * Requested node/link was not found
     * </pre>
     */
    public static final int ZMQAtomTypeNotFound_VALUE = 2;


    public final int getNumber() { return value; }

    public static ZMQAtomType valueOf(int value) {
      switch (value) {
        case 0: return ZMQAtomTypeNode;
        case 1: return ZMQAtomTypeLink;
        case 2: return ZMQAtomTypeNotFound;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ZMQAtomType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ZMQAtomType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ZMQAtomType>() {
            public ZMQAtomType findValueByNumber(int number) {
              return ZMQAtomType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.opencog.atomspace.AtomSpaceProtos.getDescriptor().getEnumTypes().get(1);
    }

    private static final ZMQAtomType[] VALUES = values();

    public static ZMQAtomType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private ZMQAtomType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ZMQAtomType)
  }

  /**
   * Protobuf enum {@code ZMQAtomRequestKind}
   */
  public enum ZMQAtomFetchKind
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UUID = 0;</code>
     *
     * <pre>
     * get atom by handle UUID
     * </pre>
     */
    UUID(0, 0),
    /**
     * <code>NODE = 1;</code>
     *
     * <pre>
     * get node by atom_type and node_name
     * </pre>
     */
    NODE(1, 1),
    /**
     * <code>LINK = 2;</code>
     *
     * <pre>
     * get link by atom_type and handle_seq
     * </pre>
     */
    LINK(2, 2),
    ;

    /**
     * <code>UUID = 0;</code>
     *
     * <pre>
     * get atom by handle UUID
     * </pre>
     */
    public static final int UUID_VALUE = 0;
    /**
     * <code>NODE = 1;</code>
     *
     * <pre>
     * get node by atom_type and node_name
     * </pre>
     */
    public static final int NODE_VALUE = 1;
    /**
     * <code>LINK = 2;</code>
     *
     * <pre>
     * get link by atom_type and handle_seq
     * </pre>
     */
    public static final int LINK_VALUE = 2;


    public final int getNumber() { return value; }

    public static ZMQAtomFetchKind valueOf(int value) {
      switch (value) {
        case 0: return UUID;
        case 1: return NODE;
        case 2: return LINK;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ZMQAtomFetchKind>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ZMQAtomFetchKind>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ZMQAtomFetchKind>() {
            public ZMQAtomFetchKind findValueByNumber(int number) {
              return ZMQAtomFetchKind.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.opencog.atomspace.AtomSpaceProtos.getDescriptor().getEnumTypes().get(2);
    }

    private static final ZMQAtomFetchKind[] VALUES = values();

    public static ZMQAtomFetchKind valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private ZMQAtomFetchKind(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ZMQAtomRequestKind)
  }

  /**
   * Protobuf enum {@code ZMQFunctionType}
   */
  public enum ZMQFunctionType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ZMQgetAtom = 0;</code>
     */
    ZMQgetAtom(0, 0),
    /**
     * <code>ZMQgetName = 1;</code>
     */
    ZMQgetName(1, 1),
    /**
     * <code>ZMQgetAtoms = 2;</code>
     */
    ZMQgetAtoms(2, 2),
    ;

    /**
     * <code>ZMQgetAtom = 0;</code>
     */
    public static final int ZMQgetAtom_VALUE = 0;
    /**
     * <code>ZMQgetName = 1;</code>
     */
    public static final int ZMQgetName_VALUE = 1;
    /**
     * <code>ZMQgetAtoms = 2;</code>
     */
    public static final int ZMQgetAtoms_VALUE = 2;


    public final int getNumber() { return value; }

    public static ZMQFunctionType valueOf(int value) {
      switch (value) {
        case 0: return ZMQgetAtom;
        case 1: return ZMQgetName;
        case 2: return ZMQgetAtoms;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ZMQFunctionType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ZMQFunctionType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ZMQFunctionType>() {
            public ZMQFunctionType findValueByNumber(int number) {
              return ZMQFunctionType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.opencog.atomspace.AtomSpaceProtos.getDescriptor().getEnumTypes().get(3);
    }

    private static final ZMQFunctionType[] VALUES = values();

    public static ZMQFunctionType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private ZMQFunctionType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ZMQFunctionType)
  }

  public interface ZMQAttentionValueHolderMessageOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 STI = 1;
    /**
     * <code>required int32 STI = 1;</code>
     */
    boolean hasSTI();
    /**
     * <code>required int32 STI = 1;</code>
     */
    int getSTI();

    // required int32 LTI = 2;
    /**
     * <code>required int32 LTI = 2;</code>
     */
    boolean hasLTI();
    /**
     * <code>required int32 LTI = 2;</code>
     */
    int getLTI();

    // required int32 VLTI = 3;
    /**
     * <code>required int32 VLTI = 3;</code>
     */
    boolean hasVLTI();
    /**
     * <code>required int32 VLTI = 3;</code>
     */
    int getVLTI();
  }
  /**
   * Protobuf type {@code ZMQAttentionValueHolderMessage}
   */
  public static final class ZMQAttentionValueHolderMessage extends
      com.google.protobuf.GeneratedMessage
      implements ZMQAttentionValueHolderMessageOrBuilder {
    // Use ZMQAttentionValueHolderMessage.newBuilder() to construct.
    private ZMQAttentionValueHolderMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ZMQAttentionValueHolderMessage(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ZMQAttentionValueHolderMessage defaultInstance;
    public static ZMQAttentionValueHolderMessage getDefaultInstance() {
      return defaultInstance;
    }

    public ZMQAttentionValueHolderMessage getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ZMQAttentionValueHolderMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              sTI_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              lTI_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              vLTI_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencog.atomspace.AtomSpaceProtos.internal_static_ZMQAttentionValueHolderMessage_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencog.atomspace.AtomSpaceProtos.internal_static_ZMQAttentionValueHolderMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencog.atomspace.AtomSpaceProtos.ZMQAttentionValueHolderMessage.class, org.opencog.atomspace.AtomSpaceProtos.ZMQAttentionValueHolderMessage.Builder.class);
    }

    public static com.google.protobuf.Parser<ZMQAttentionValueHolderMessage> PARSER =
        new com.google.protobuf.AbstractParser<ZMQAttentionValueHolderMessage>() {
      public ZMQAttentionValueHolderMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ZMQAttentionValueHolderMessage(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ZMQAttentionValueHolderMessage> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 STI = 1;
    public static final int STI_FIELD_NUMBER = 1;
    private int sTI_;
    /**
     * <code>required int32 STI = 1;</code>
     */
    public boolean hasSTI() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 STI = 1;</code>
     */
    public int getSTI() {
      return sTI_;
    }

    // required int32 LTI = 2;
    public static final int LTI_FIELD_NUMBER = 2;
    private int lTI_;
    /**
     * <code>required int32 LTI = 2;</code>
     */
    public boolean hasLTI() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 LTI = 2;</code>
     */
    public int getLTI() {
      return lTI_;
    }

    // required int32 VLTI = 3;
    public static final int VLTI_FIELD_NUMBER = 3;
    private int vLTI_;
    /**
     * <code>required int32 VLTI = 3;</code>
     */
    public boolean hasVLTI() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 VLTI = 3;</code>
     */
    public int getVLTI() {
      return vLTI_;
    }

    private void initFields() {
      sTI_ = 0;
      lTI_ = 0;
      vLTI_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasSTI()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLTI()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasVLTI()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, sTI_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, lTI_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, vLTI_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, sTI_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, lTI_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, vLTI_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.opencog.atomspace.AtomSpaceProtos.ZMQAttentionValueHolderMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQAttentionValueHolderMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQAttentionValueHolderMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQAttentionValueHolderMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQAttentionValueHolderMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQAttentionValueHolderMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQAttentionValueHolderMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQAttentionValueHolderMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQAttentionValueHolderMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQAttentionValueHolderMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.opencog.atomspace.AtomSpaceProtos.ZMQAttentionValueHolderMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ZMQAttentionValueHolderMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.opencog.atomspace.AtomSpaceProtos.ZMQAttentionValueHolderMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencog.atomspace.AtomSpaceProtos.internal_static_ZMQAttentionValueHolderMessage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencog.atomspace.AtomSpaceProtos.internal_static_ZMQAttentionValueHolderMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencog.atomspace.AtomSpaceProtos.ZMQAttentionValueHolderMessage.class, org.opencog.atomspace.AtomSpaceProtos.ZMQAttentionValueHolderMessage.Builder.class);
      }

      // Construct using org.opencog.atomspace.AtomSpaceProtos.ZMQAttentionValueHolderMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        sTI_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        lTI_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        vLTI_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencog.atomspace.AtomSpaceProtos.internal_static_ZMQAttentionValueHolderMessage_descriptor;
      }

      public org.opencog.atomspace.AtomSpaceProtos.ZMQAttentionValueHolderMessage getDefaultInstanceForType() {
        return org.opencog.atomspace.AtomSpaceProtos.ZMQAttentionValueHolderMessage.getDefaultInstance();
      }

      public org.opencog.atomspace.AtomSpaceProtos.ZMQAttentionValueHolderMessage build() {
        org.opencog.atomspace.AtomSpaceProtos.ZMQAttentionValueHolderMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.opencog.atomspace.AtomSpaceProtos.ZMQAttentionValueHolderMessage buildPartial() {
        org.opencog.atomspace.AtomSpaceProtos.ZMQAttentionValueHolderMessage result = new org.opencog.atomspace.AtomSpaceProtos.ZMQAttentionValueHolderMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.sTI_ = sTI_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.lTI_ = lTI_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.vLTI_ = vLTI_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencog.atomspace.AtomSpaceProtos.ZMQAttentionValueHolderMessage) {
          return mergeFrom((org.opencog.atomspace.AtomSpaceProtos.ZMQAttentionValueHolderMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencog.atomspace.AtomSpaceProtos.ZMQAttentionValueHolderMessage other) {
        if (other == org.opencog.atomspace.AtomSpaceProtos.ZMQAttentionValueHolderMessage.getDefaultInstance()) return this;
        if (other.hasSTI()) {
          setSTI(other.getSTI());
        }
        if (other.hasLTI()) {
          setLTI(other.getLTI());
        }
        if (other.hasVLTI()) {
          setVLTI(other.getVLTI());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSTI()) {
          
          return false;
        }
        if (!hasLTI()) {
          
          return false;
        }
        if (!hasVLTI()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencog.atomspace.AtomSpaceProtos.ZMQAttentionValueHolderMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencog.atomspace.AtomSpaceProtos.ZMQAttentionValueHolderMessage) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 STI = 1;
      private int sTI_ ;
      /**
       * <code>required int32 STI = 1;</code>
       */
      public boolean hasSTI() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 STI = 1;</code>
       */
      public int getSTI() {
        return sTI_;
      }
      /**
       * <code>required int32 STI = 1;</code>
       */
      public Builder setSTI(int value) {
        bitField0_ |= 0x00000001;
        sTI_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 STI = 1;</code>
       */
      public Builder clearSTI() {
        bitField0_ = (bitField0_ & ~0x00000001);
        sTI_ = 0;
        onChanged();
        return this;
      }

      // required int32 LTI = 2;
      private int lTI_ ;
      /**
       * <code>required int32 LTI = 2;</code>
       */
      public boolean hasLTI() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 LTI = 2;</code>
       */
      public int getLTI() {
        return lTI_;
      }
      /**
       * <code>required int32 LTI = 2;</code>
       */
      public Builder setLTI(int value) {
        bitField0_ |= 0x00000002;
        lTI_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 LTI = 2;</code>
       */
      public Builder clearLTI() {
        bitField0_ = (bitField0_ & ~0x00000002);
        lTI_ = 0;
        onChanged();
        return this;
      }

      // required int32 VLTI = 3;
      private int vLTI_ ;
      /**
       * <code>required int32 VLTI = 3;</code>
       */
      public boolean hasVLTI() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 VLTI = 3;</code>
       */
      public int getVLTI() {
        return vLTI_;
      }
      /**
       * <code>required int32 VLTI = 3;</code>
       */
      public Builder setVLTI(int value) {
        bitField0_ |= 0x00000004;
        vLTI_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 VLTI = 3;</code>
       */
      public Builder clearVLTI() {
        bitField0_ = (bitField0_ & ~0x00000004);
        vLTI_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ZMQAttentionValueHolderMessage)
    }

    static {
      defaultInstance = new ZMQAttentionValueHolderMessage(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ZMQAttentionValueHolderMessage)
  }

  public interface ZMQVersionHandleMessageOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required uint32 indicator = 1;
    /**
     * <code>required uint32 indicator = 1;</code>
     */
    boolean hasIndicator();
    /**
     * <code>required uint32 indicator = 1;</code>
     */
    int getIndicator();

    // required uint64 substantive = 2;
    /**
     * <code>required uint64 substantive = 2;</code>
     *
     * <pre>
     *handle
     * </pre>
     */
    boolean hasSubstantive();
    /**
     * <code>required uint64 substantive = 2;</code>
     *
     * <pre>
     *handle
     * </pre>
     */
    long getSubstantive();
  }
  /**
   * Protobuf type {@code ZMQVersionHandleMessage}
   */
  public static final class ZMQVersionHandleMessage extends
      com.google.protobuf.GeneratedMessage
      implements ZMQVersionHandleMessageOrBuilder {
    // Use ZMQVersionHandleMessage.newBuilder() to construct.
    private ZMQVersionHandleMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ZMQVersionHandleMessage(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ZMQVersionHandleMessage defaultInstance;
    public static ZMQVersionHandleMessage getDefaultInstance() {
      return defaultInstance;
    }

    public ZMQVersionHandleMessage getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ZMQVersionHandleMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              indicator_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              substantive_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencog.atomspace.AtomSpaceProtos.internal_static_ZMQVersionHandleMessage_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencog.atomspace.AtomSpaceProtos.internal_static_ZMQVersionHandleMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencog.atomspace.AtomSpaceProtos.ZMQVersionHandleMessage.class, org.opencog.atomspace.AtomSpaceProtos.ZMQVersionHandleMessage.Builder.class);
    }

    public static com.google.protobuf.Parser<ZMQVersionHandleMessage> PARSER =
        new com.google.protobuf.AbstractParser<ZMQVersionHandleMessage>() {
      public ZMQVersionHandleMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ZMQVersionHandleMessage(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ZMQVersionHandleMessage> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 indicator = 1;
    public static final int INDICATOR_FIELD_NUMBER = 1;
    private int indicator_;
    /**
     * <code>required uint32 indicator = 1;</code>
     */
    public boolean hasIndicator() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 indicator = 1;</code>
     */
    public int getIndicator() {
      return indicator_;
    }

    // required uint64 substantive = 2;
    public static final int SUBSTANTIVE_FIELD_NUMBER = 2;
    private long substantive_;
    /**
     * <code>required uint64 substantive = 2;</code>
     *
     * <pre>
     *handle
     * </pre>
     */
    public boolean hasSubstantive() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint64 substantive = 2;</code>
     *
     * <pre>
     *handle
     * </pre>
     */
    public long getSubstantive() {
      return substantive_;
    }

    private void initFields() {
      indicator_ = 0;
      substantive_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasIndicator()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSubstantive()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, indicator_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, substantive_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, indicator_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, substantive_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.opencog.atomspace.AtomSpaceProtos.ZMQVersionHandleMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQVersionHandleMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQVersionHandleMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQVersionHandleMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQVersionHandleMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQVersionHandleMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQVersionHandleMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQVersionHandleMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQVersionHandleMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQVersionHandleMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.opencog.atomspace.AtomSpaceProtos.ZMQVersionHandleMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ZMQVersionHandleMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.opencog.atomspace.AtomSpaceProtos.ZMQVersionHandleMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencog.atomspace.AtomSpaceProtos.internal_static_ZMQVersionHandleMessage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencog.atomspace.AtomSpaceProtos.internal_static_ZMQVersionHandleMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencog.atomspace.AtomSpaceProtos.ZMQVersionHandleMessage.class, org.opencog.atomspace.AtomSpaceProtos.ZMQVersionHandleMessage.Builder.class);
      }

      // Construct using org.opencog.atomspace.AtomSpaceProtos.ZMQVersionHandleMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        indicator_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        substantive_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencog.atomspace.AtomSpaceProtos.internal_static_ZMQVersionHandleMessage_descriptor;
      }

      public org.opencog.atomspace.AtomSpaceProtos.ZMQVersionHandleMessage getDefaultInstanceForType() {
        return org.opencog.atomspace.AtomSpaceProtos.ZMQVersionHandleMessage.getDefaultInstance();
      }

      public org.opencog.atomspace.AtomSpaceProtos.ZMQVersionHandleMessage build() {
        org.opencog.atomspace.AtomSpaceProtos.ZMQVersionHandleMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.opencog.atomspace.AtomSpaceProtos.ZMQVersionHandleMessage buildPartial() {
        org.opencog.atomspace.AtomSpaceProtos.ZMQVersionHandleMessage result = new org.opencog.atomspace.AtomSpaceProtos.ZMQVersionHandleMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.indicator_ = indicator_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.substantive_ = substantive_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencog.atomspace.AtomSpaceProtos.ZMQVersionHandleMessage) {
          return mergeFrom((org.opencog.atomspace.AtomSpaceProtos.ZMQVersionHandleMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencog.atomspace.AtomSpaceProtos.ZMQVersionHandleMessage other) {
        if (other == org.opencog.atomspace.AtomSpaceProtos.ZMQVersionHandleMessage.getDefaultInstance()) return this;
        if (other.hasIndicator()) {
          setIndicator(other.getIndicator());
        }
        if (other.hasSubstantive()) {
          setSubstantive(other.getSubstantive());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasIndicator()) {
          
          return false;
        }
        if (!hasSubstantive()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencog.atomspace.AtomSpaceProtos.ZMQVersionHandleMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencog.atomspace.AtomSpaceProtos.ZMQVersionHandleMessage) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 indicator = 1;
      private int indicator_ ;
      /**
       * <code>required uint32 indicator = 1;</code>
       */
      public boolean hasIndicator() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 indicator = 1;</code>
       */
      public int getIndicator() {
        return indicator_;
      }
      /**
       * <code>required uint32 indicator = 1;</code>
       */
      public Builder setIndicator(int value) {
        bitField0_ |= 0x00000001;
        indicator_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 indicator = 1;</code>
       */
      public Builder clearIndicator() {
        bitField0_ = (bitField0_ & ~0x00000001);
        indicator_ = 0;
        onChanged();
        return this;
      }

      // required uint64 substantive = 2;
      private long substantive_ ;
      /**
       * <code>required uint64 substantive = 2;</code>
       *
       * <pre>
       *handle
       * </pre>
       */
      public boolean hasSubstantive() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint64 substantive = 2;</code>
       *
       * <pre>
       *handle
       * </pre>
       */
      public long getSubstantive() {
        return substantive_;
      }
      /**
       * <code>required uint64 substantive = 2;</code>
       *
       * <pre>
       *handle
       * </pre>
       */
      public Builder setSubstantive(long value) {
        bitField0_ |= 0x00000002;
        substantive_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 substantive = 2;</code>
       *
       * <pre>
       *handle
       * </pre>
       */
      public Builder clearSubstantive() {
        bitField0_ = (bitField0_ & ~0x00000002);
        substantive_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ZMQVersionHandleMessage)
    }

    static {
      defaultInstance = new ZMQVersionHandleMessage(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ZMQVersionHandleMessage)
  }

  public interface ZMQSingleTruthValueMessageOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .ZMQTruthValueType truthvaluetype = 1;
    /**
     * <code>required .ZMQTruthValueType truthvaluetype = 1;</code>
     */
    boolean hasTruthvaluetype();
    /**
     * <code>required .ZMQTruthValueType truthvaluetype = 1;</code>
     */
    org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueType getTruthvaluetype();

    // optional float mean = 2;
    /**
     * <code>optional float mean = 2;</code>
     *
     * <pre>
     *simple, count, composite, indefinite
     * </pre>
     */
    boolean hasMean();
    /**
     * <code>optional float mean = 2;</code>
     *
     * <pre>
     *simple, count, composite, indefinite
     * </pre>
     */
    float getMean();

    // optional float confidence = 3;
    /**
     * <code>optional float confidence = 3;</code>
     *
     * <pre>
     *count, composite, indefinite
     * </pre>
     */
    boolean hasConfidence();
    /**
     * <code>optional float confidence = 3;</code>
     *
     * <pre>
     *count, composite, indefinite
     * </pre>
     */
    float getConfidence();

    // optional float count = 4;
    /**
     * <code>optional float count = 4;</code>
     *
     * <pre>
     *simple, count, composite, indefinite
     * </pre>
     */
    boolean hasCount();
    /**
     * <code>optional float count = 4;</code>
     *
     * <pre>
     *simple, count, composite, indefinite
     * </pre>
     */
    float getCount();

    // optional .ZMQVersionHandleMessage versionHandle = 5;
    /**
     * <code>optional .ZMQVersionHandleMessage versionHandle = 5;</code>
     *
     * <pre>
     *composite (versionedTVs)
     * </pre>
     */
    boolean hasVersionHandle();
    /**
     * <code>optional .ZMQVersionHandleMessage versionHandle = 5;</code>
     *
     * <pre>
     *composite (versionedTVs)
     * </pre>
     */
    org.opencog.atomspace.AtomSpaceProtos.ZMQVersionHandleMessage getVersionHandle();
    /**
     * <code>optional .ZMQVersionHandleMessage versionHandle = 5;</code>
     *
     * <pre>
     *composite (versionedTVs)
     * </pre>
     */
    org.opencog.atomspace.AtomSpaceProtos.ZMQVersionHandleMessageOrBuilder getVersionHandleOrBuilder();

    // optional float U = 6;
    /**
     * <code>optional float U = 6;</code>
     *
     * <pre>
     *indefinite
     * </pre>
     */
    boolean hasU();
    /**
     * <code>optional float U = 6;</code>
     *
     * <pre>
     *indefinite
     * </pre>
     */
    float getU();

    // optional float L = 7;
    /**
     * <code>optional float L = 7;</code>
     *
     * <pre>
     *indefinite
     * </pre>
     */
    boolean hasL();
    /**
     * <code>optional float L = 7;</code>
     *
     * <pre>
     *indefinite
     * </pre>
     */
    float getL();

    // optional float confidenceLevel = 8;
    /**
     * <code>optional float confidenceLevel = 8;</code>
     *
     * <pre>
     *indefinite
     * </pre>
     */
    boolean hasConfidenceLevel();
    /**
     * <code>optional float confidenceLevel = 8;</code>
     *
     * <pre>
     *indefinite
     * </pre>
     */
    float getConfidenceLevel();

    // optional int32 symmetric = 9;
    /**
     * <code>optional int32 symmetric = 9;</code>
     *
     * <pre>
     *indefinite
     * </pre>
     */
    boolean hasSymmetric();
    /**
     * <code>optional int32 symmetric = 9;</code>
     *
     * <pre>
     *indefinite
     * </pre>
     */
    int getSymmetric();

    // optional float diff = 10;
    /**
     * <code>optional float diff = 10;</code>
     *
     * <pre>
     *indefinite
     * </pre>
     */
    boolean hasDiff();
    /**
     * <code>optional float diff = 10;</code>
     *
     * <pre>
     *indefinite
     * </pre>
     */
    float getDiff();

    // repeated float firstOrderDistribution = 11;
    /**
     * <code>repeated float firstOrderDistribution = 11;</code>
     *
     * <pre>
     *indefinite
     * </pre>
     */
    java.util.List<java.lang.Float> getFirstOrderDistributionList();
    /**
     * <code>repeated float firstOrderDistribution = 11;</code>
     *
     * <pre>
     *indefinite
     * </pre>
     */
    int getFirstOrderDistributionCount();
    /**
     * <code>repeated float firstOrderDistribution = 11;</code>
     *
     * <pre>
     *indefinite
     * </pre>
     */
    float getFirstOrderDistribution(int index);
  }
  /**
   * Protobuf type {@code ZMQSingleTruthValueMessage}
   */
  public static final class ZMQSingleTruthValueMessage extends
      com.google.protobuf.GeneratedMessage
      implements ZMQSingleTruthValueMessageOrBuilder {
    // Use ZMQSingleTruthValueMessage.newBuilder() to construct.
    private ZMQSingleTruthValueMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ZMQSingleTruthValueMessage(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ZMQSingleTruthValueMessage defaultInstance;
    public static ZMQSingleTruthValueMessage getDefaultInstance() {
      return defaultInstance;
    }

    public ZMQSingleTruthValueMessage getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ZMQSingleTruthValueMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueType value = org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                truthvaluetype_ = value;
              }
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              mean_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              confidence_ = input.readFloat();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              count_ = input.readFloat();
              break;
            }
            case 42: {
              org.opencog.atomspace.AtomSpaceProtos.ZMQVersionHandleMessage.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = versionHandle_.toBuilder();
              }
              versionHandle_ = input.readMessage(org.opencog.atomspace.AtomSpaceProtos.ZMQVersionHandleMessage.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(versionHandle_);
                versionHandle_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 53: {
              bitField0_ |= 0x00000020;
              u_ = input.readFloat();
              break;
            }
            case 61: {
              bitField0_ |= 0x00000040;
              l_ = input.readFloat();
              break;
            }
            case 69: {
              bitField0_ |= 0x00000080;
              confidenceLevel_ = input.readFloat();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              symmetric_ = input.readInt32();
              break;
            }
            case 85: {
              bitField0_ |= 0x00000200;
              diff_ = input.readFloat();
              break;
            }
            case 93: {
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                firstOrderDistribution_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000400;
              }
              firstOrderDistribution_.add(input.readFloat());
              break;
            }
            case 90: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400) && input.getBytesUntilLimit() > 0) {
                firstOrderDistribution_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000400;
              }
              while (input.getBytesUntilLimit() > 0) {
                firstOrderDistribution_.add(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
          firstOrderDistribution_ = java.util.Collections.unmodifiableList(firstOrderDistribution_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencog.atomspace.AtomSpaceProtos.internal_static_ZMQSingleTruthValueMessage_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencog.atomspace.AtomSpaceProtos.internal_static_ZMQSingleTruthValueMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessage.class, org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessage.Builder.class);
    }

    public static com.google.protobuf.Parser<ZMQSingleTruthValueMessage> PARSER =
        new com.google.protobuf.AbstractParser<ZMQSingleTruthValueMessage>() {
      public ZMQSingleTruthValueMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ZMQSingleTruthValueMessage(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ZMQSingleTruthValueMessage> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .ZMQTruthValueType truthvaluetype = 1;
    public static final int TRUTHVALUETYPE_FIELD_NUMBER = 1;
    private org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueType truthvaluetype_;
    /**
     * <code>required .ZMQTruthValueType truthvaluetype = 1;</code>
     */
    public boolean hasTruthvaluetype() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .ZMQTruthValueType truthvaluetype = 1;</code>
     */
    public org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueType getTruthvaluetype() {
      return truthvaluetype_;
    }

    // optional float mean = 2;
    public static final int MEAN_FIELD_NUMBER = 2;
    private float mean_;
    /**
     * <code>optional float mean = 2;</code>
     *
     * <pre>
     *simple, count, composite, indefinite
     * </pre>
     */
    public boolean hasMean() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional float mean = 2;</code>
     *
     * <pre>
     *simple, count, composite, indefinite
     * </pre>
     */
    public float getMean() {
      return mean_;
    }

    // optional float confidence = 3;
    public static final int CONFIDENCE_FIELD_NUMBER = 3;
    private float confidence_;
    /**
     * <code>optional float confidence = 3;</code>
     *
     * <pre>
     *count, composite, indefinite
     * </pre>
     */
    public boolean hasConfidence() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional float confidence = 3;</code>
     *
     * <pre>
     *count, composite, indefinite
     * </pre>
     */
    public float getConfidence() {
      return confidence_;
    }

    // optional float count = 4;
    public static final int COUNT_FIELD_NUMBER = 4;
    private float count_;
    /**
     * <code>optional float count = 4;</code>
     *
     * <pre>
     *simple, count, composite, indefinite
     * </pre>
     */
    public boolean hasCount() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional float count = 4;</code>
     *
     * <pre>
     *simple, count, composite, indefinite
     * </pre>
     */
    public float getCount() {
      return count_;
    }

    // optional .ZMQVersionHandleMessage versionHandle = 5;
    public static final int VERSIONHANDLE_FIELD_NUMBER = 5;
    private org.opencog.atomspace.AtomSpaceProtos.ZMQVersionHandleMessage versionHandle_;
    /**
     * <code>optional .ZMQVersionHandleMessage versionHandle = 5;</code>
     *
     * <pre>
     *composite (versionedTVs)
     * </pre>
     */
    public boolean hasVersionHandle() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .ZMQVersionHandleMessage versionHandle = 5;</code>
     *
     * <pre>
     *composite (versionedTVs)
     * </pre>
     */
    public org.opencog.atomspace.AtomSpaceProtos.ZMQVersionHandleMessage getVersionHandle() {
      return versionHandle_;
    }
    /**
     * <code>optional .ZMQVersionHandleMessage versionHandle = 5;</code>
     *
     * <pre>
     *composite (versionedTVs)
     * </pre>
     */
    public org.opencog.atomspace.AtomSpaceProtos.ZMQVersionHandleMessageOrBuilder getVersionHandleOrBuilder() {
      return versionHandle_;
    }

    // optional float U = 6;
    public static final int U_FIELD_NUMBER = 6;
    private float u_;
    /**
     * <code>optional float U = 6;</code>
     *
     * <pre>
     *indefinite
     * </pre>
     */
    public boolean hasU() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional float U = 6;</code>
     *
     * <pre>
     *indefinite
     * </pre>
     */
    public float getU() {
      return u_;
    }

    // optional float L = 7;
    public static final int L_FIELD_NUMBER = 7;
    private float l_;
    /**
     * <code>optional float L = 7;</code>
     *
     * <pre>
     *indefinite
     * </pre>
     */
    public boolean hasL() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional float L = 7;</code>
     *
     * <pre>
     *indefinite
     * </pre>
     */
    public float getL() {
      return l_;
    }

    // optional float confidenceLevel = 8;
    public static final int CONFIDENCELEVEL_FIELD_NUMBER = 8;
    private float confidenceLevel_;
    /**
     * <code>optional float confidenceLevel = 8;</code>
     *
     * <pre>
     *indefinite
     * </pre>
     */
    public boolean hasConfidenceLevel() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional float confidenceLevel = 8;</code>
     *
     * <pre>
     *indefinite
     * </pre>
     */
    public float getConfidenceLevel() {
      return confidenceLevel_;
    }

    // optional int32 symmetric = 9;
    public static final int SYMMETRIC_FIELD_NUMBER = 9;
    private int symmetric_;
    /**
     * <code>optional int32 symmetric = 9;</code>
     *
     * <pre>
     *indefinite
     * </pre>
     */
    public boolean hasSymmetric() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 symmetric = 9;</code>
     *
     * <pre>
     *indefinite
     * </pre>
     */
    public int getSymmetric() {
      return symmetric_;
    }

    // optional float diff = 10;
    public static final int DIFF_FIELD_NUMBER = 10;
    private float diff_;
    /**
     * <code>optional float diff = 10;</code>
     *
     * <pre>
     *indefinite
     * </pre>
     */
    public boolean hasDiff() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional float diff = 10;</code>
     *
     * <pre>
     *indefinite
     * </pre>
     */
    public float getDiff() {
      return diff_;
    }

    // repeated float firstOrderDistribution = 11;
    public static final int FIRSTORDERDISTRIBUTION_FIELD_NUMBER = 11;
    private java.util.List<java.lang.Float> firstOrderDistribution_;
    /**
     * <code>repeated float firstOrderDistribution = 11;</code>
     *
     * <pre>
     *indefinite
     * </pre>
     */
    public java.util.List<java.lang.Float>
        getFirstOrderDistributionList() {
      return firstOrderDistribution_;
    }
    /**
     * <code>repeated float firstOrderDistribution = 11;</code>
     *
     * <pre>
     *indefinite
     * </pre>
     */
    public int getFirstOrderDistributionCount() {
      return firstOrderDistribution_.size();
    }
    /**
     * <code>repeated float firstOrderDistribution = 11;</code>
     *
     * <pre>
     *indefinite
     * </pre>
     */
    public float getFirstOrderDistribution(int index) {
      return firstOrderDistribution_.get(index);
    }

    private void initFields() {
      truthvaluetype_ = org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueType.ZMQTruthValueTypeSimple;
      mean_ = 0F;
      confidence_ = 0F;
      count_ = 0F;
      versionHandle_ = org.opencog.atomspace.AtomSpaceProtos.ZMQVersionHandleMessage.getDefaultInstance();
      u_ = 0F;
      l_ = 0F;
      confidenceLevel_ = 0F;
      symmetric_ = 0;
      diff_ = 0F;
      firstOrderDistribution_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasTruthvaluetype()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasVersionHandle()) {
        if (!getVersionHandle().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, truthvaluetype_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, mean_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, confidence_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, count_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, versionHandle_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeFloat(6, u_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeFloat(7, l_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeFloat(8, confidenceLevel_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, symmetric_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeFloat(10, diff_);
      }
      for (int i = 0; i < firstOrderDistribution_.size(); i++) {
        output.writeFloat(11, firstOrderDistribution_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, truthvaluetype_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, mean_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, confidence_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, count_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, versionHandle_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, u_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, l_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, confidenceLevel_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, symmetric_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(10, diff_);
      }
      {
        int dataSize = 0;
        dataSize = 4 * getFirstOrderDistributionList().size();
        size += dataSize;
        size += 1 * getFirstOrderDistributionList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ZMQSingleTruthValueMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencog.atomspace.AtomSpaceProtos.internal_static_ZMQSingleTruthValueMessage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencog.atomspace.AtomSpaceProtos.internal_static_ZMQSingleTruthValueMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessage.class, org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessage.Builder.class);
      }

      // Construct using org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getVersionHandleFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        truthvaluetype_ = org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueType.ZMQTruthValueTypeSimple;
        bitField0_ = (bitField0_ & ~0x00000001);
        mean_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        confidence_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        count_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (versionHandleBuilder_ == null) {
          versionHandle_ = org.opencog.atomspace.AtomSpaceProtos.ZMQVersionHandleMessage.getDefaultInstance();
        } else {
          versionHandleBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        u_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000020);
        l_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000040);
        confidenceLevel_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000080);
        symmetric_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        diff_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000200);
        firstOrderDistribution_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencog.atomspace.AtomSpaceProtos.internal_static_ZMQSingleTruthValueMessage_descriptor;
      }

      public org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessage getDefaultInstanceForType() {
        return org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessage.getDefaultInstance();
      }

      public org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessage build() {
        org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessage buildPartial() {
        org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessage result = new org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.truthvaluetype_ = truthvaluetype_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.mean_ = mean_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.confidence_ = confidence_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.count_ = count_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (versionHandleBuilder_ == null) {
          result.versionHandle_ = versionHandle_;
        } else {
          result.versionHandle_ = versionHandleBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.u_ = u_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.l_ = l_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.confidenceLevel_ = confidenceLevel_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.symmetric_ = symmetric_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.diff_ = diff_;
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          firstOrderDistribution_ = java.util.Collections.unmodifiableList(firstOrderDistribution_);
          bitField0_ = (bitField0_ & ~0x00000400);
        }
        result.firstOrderDistribution_ = firstOrderDistribution_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessage) {
          return mergeFrom((org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessage other) {
        if (other == org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessage.getDefaultInstance()) return this;
        if (other.hasTruthvaluetype()) {
          setTruthvaluetype(other.getTruthvaluetype());
        }
        if (other.hasMean()) {
          setMean(other.getMean());
        }
        if (other.hasConfidence()) {
          setConfidence(other.getConfidence());
        }
        if (other.hasCount()) {
          setCount(other.getCount());
        }
        if (other.hasVersionHandle()) {
          mergeVersionHandle(other.getVersionHandle());
        }
        if (other.hasU()) {
          setU(other.getU());
        }
        if (other.hasL()) {
          setL(other.getL());
        }
        if (other.hasConfidenceLevel()) {
          setConfidenceLevel(other.getConfidenceLevel());
        }
        if (other.hasSymmetric()) {
          setSymmetric(other.getSymmetric());
        }
        if (other.hasDiff()) {
          setDiff(other.getDiff());
        }
        if (!other.firstOrderDistribution_.isEmpty()) {
          if (firstOrderDistribution_.isEmpty()) {
            firstOrderDistribution_ = other.firstOrderDistribution_;
            bitField0_ = (bitField0_ & ~0x00000400);
          } else {
            ensureFirstOrderDistributionIsMutable();
            firstOrderDistribution_.addAll(other.firstOrderDistribution_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTruthvaluetype()) {
          
          return false;
        }
        if (hasVersionHandle()) {
          if (!getVersionHandle().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessage) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .ZMQTruthValueType truthvaluetype = 1;
      private org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueType truthvaluetype_ = org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueType.ZMQTruthValueTypeSimple;
      /**
       * <code>required .ZMQTruthValueType truthvaluetype = 1;</code>
       */
      public boolean hasTruthvaluetype() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .ZMQTruthValueType truthvaluetype = 1;</code>
       */
      public org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueType getTruthvaluetype() {
        return truthvaluetype_;
      }
      /**
       * <code>required .ZMQTruthValueType truthvaluetype = 1;</code>
       */
      public Builder setTruthvaluetype(org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        truthvaluetype_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .ZMQTruthValueType truthvaluetype = 1;</code>
       */
      public Builder clearTruthvaluetype() {
        bitField0_ = (bitField0_ & ~0x00000001);
        truthvaluetype_ = org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueType.ZMQTruthValueTypeSimple;
        onChanged();
        return this;
      }

      // optional float mean = 2;
      private float mean_ ;
      /**
       * <code>optional float mean = 2;</code>
       *
       * <pre>
       *simple, count, composite, indefinite
       * </pre>
       */
      public boolean hasMean() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional float mean = 2;</code>
       *
       * <pre>
       *simple, count, composite, indefinite
       * </pre>
       */
      public float getMean() {
        return mean_;
      }
      /**
       * <code>optional float mean = 2;</code>
       *
       * <pre>
       *simple, count, composite, indefinite
       * </pre>
       */
      public Builder setMean(float value) {
        bitField0_ |= 0x00000002;
        mean_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float mean = 2;</code>
       *
       * <pre>
       *simple, count, composite, indefinite
       * </pre>
       */
      public Builder clearMean() {
        bitField0_ = (bitField0_ & ~0x00000002);
        mean_ = 0F;
        onChanged();
        return this;
      }

      // optional float confidence = 3;
      private float confidence_ ;
      /**
       * <code>optional float confidence = 3;</code>
       *
       * <pre>
       *count, composite, indefinite
       * </pre>
       */
      public boolean hasConfidence() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional float confidence = 3;</code>
       *
       * <pre>
       *count, composite, indefinite
       * </pre>
       */
      public float getConfidence() {
        return confidence_;
      }
      /**
       * <code>optional float confidence = 3;</code>
       *
       * <pre>
       *count, composite, indefinite
       * </pre>
       */
      public Builder setConfidence(float value) {
        bitField0_ |= 0x00000004;
        confidence_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float confidence = 3;</code>
       *
       * <pre>
       *count, composite, indefinite
       * </pre>
       */
      public Builder clearConfidence() {
        bitField0_ = (bitField0_ & ~0x00000004);
        confidence_ = 0F;
        onChanged();
        return this;
      }

      // optional float count = 4;
      private float count_ ;
      /**
       * <code>optional float count = 4;</code>
       *
       * <pre>
       *simple, count, composite, indefinite
       * </pre>
       */
      public boolean hasCount() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional float count = 4;</code>
       *
       * <pre>
       *simple, count, composite, indefinite
       * </pre>
       */
      public float getCount() {
        return count_;
      }
      /**
       * <code>optional float count = 4;</code>
       *
       * <pre>
       *simple, count, composite, indefinite
       * </pre>
       */
      public Builder setCount(float value) {
        bitField0_ |= 0x00000008;
        count_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float count = 4;</code>
       *
       * <pre>
       *simple, count, composite, indefinite
       * </pre>
       */
      public Builder clearCount() {
        bitField0_ = (bitField0_ & ~0x00000008);
        count_ = 0F;
        onChanged();
        return this;
      }

      // optional .ZMQVersionHandleMessage versionHandle = 5;
      private org.opencog.atomspace.AtomSpaceProtos.ZMQVersionHandleMessage versionHandle_ = org.opencog.atomspace.AtomSpaceProtos.ZMQVersionHandleMessage.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.opencog.atomspace.AtomSpaceProtos.ZMQVersionHandleMessage, org.opencog.atomspace.AtomSpaceProtos.ZMQVersionHandleMessage.Builder, org.opencog.atomspace.AtomSpaceProtos.ZMQVersionHandleMessageOrBuilder> versionHandleBuilder_;
      /**
       * <code>optional .ZMQVersionHandleMessage versionHandle = 5;</code>
       *
       * <pre>
       *composite (versionedTVs)
       * </pre>
       */
      public boolean hasVersionHandle() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .ZMQVersionHandleMessage versionHandle = 5;</code>
       *
       * <pre>
       *composite (versionedTVs)
       * </pre>
       */
      public org.opencog.atomspace.AtomSpaceProtos.ZMQVersionHandleMessage getVersionHandle() {
        if (versionHandleBuilder_ == null) {
          return versionHandle_;
        } else {
          return versionHandleBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .ZMQVersionHandleMessage versionHandle = 5;</code>
       *
       * <pre>
       *composite (versionedTVs)
       * </pre>
       */
      public Builder setVersionHandle(org.opencog.atomspace.AtomSpaceProtos.ZMQVersionHandleMessage value) {
        if (versionHandleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          versionHandle_ = value;
          onChanged();
        } else {
          versionHandleBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .ZMQVersionHandleMessage versionHandle = 5;</code>
       *
       * <pre>
       *composite (versionedTVs)
       * </pre>
       */
      public Builder setVersionHandle(
          org.opencog.atomspace.AtomSpaceProtos.ZMQVersionHandleMessage.Builder builderForValue) {
        if (versionHandleBuilder_ == null) {
          versionHandle_ = builderForValue.build();
          onChanged();
        } else {
          versionHandleBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .ZMQVersionHandleMessage versionHandle = 5;</code>
       *
       * <pre>
       *composite (versionedTVs)
       * </pre>
       */
      public Builder mergeVersionHandle(org.opencog.atomspace.AtomSpaceProtos.ZMQVersionHandleMessage value) {
        if (versionHandleBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              versionHandle_ != org.opencog.atomspace.AtomSpaceProtos.ZMQVersionHandleMessage.getDefaultInstance()) {
            versionHandle_ =
              org.opencog.atomspace.AtomSpaceProtos.ZMQVersionHandleMessage.newBuilder(versionHandle_).mergeFrom(value).buildPartial();
          } else {
            versionHandle_ = value;
          }
          onChanged();
        } else {
          versionHandleBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .ZMQVersionHandleMessage versionHandle = 5;</code>
       *
       * <pre>
       *composite (versionedTVs)
       * </pre>
       */
      public Builder clearVersionHandle() {
        if (versionHandleBuilder_ == null) {
          versionHandle_ = org.opencog.atomspace.AtomSpaceProtos.ZMQVersionHandleMessage.getDefaultInstance();
          onChanged();
        } else {
          versionHandleBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .ZMQVersionHandleMessage versionHandle = 5;</code>
       *
       * <pre>
       *composite (versionedTVs)
       * </pre>
       */
      public org.opencog.atomspace.AtomSpaceProtos.ZMQVersionHandleMessage.Builder getVersionHandleBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getVersionHandleFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .ZMQVersionHandleMessage versionHandle = 5;</code>
       *
       * <pre>
       *composite (versionedTVs)
       * </pre>
       */
      public org.opencog.atomspace.AtomSpaceProtos.ZMQVersionHandleMessageOrBuilder getVersionHandleOrBuilder() {
        if (versionHandleBuilder_ != null) {
          return versionHandleBuilder_.getMessageOrBuilder();
        } else {
          return versionHandle_;
        }
      }
      /**
       * <code>optional .ZMQVersionHandleMessage versionHandle = 5;</code>
       *
       * <pre>
       *composite (versionedTVs)
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.opencog.atomspace.AtomSpaceProtos.ZMQVersionHandleMessage, org.opencog.atomspace.AtomSpaceProtos.ZMQVersionHandleMessage.Builder, org.opencog.atomspace.AtomSpaceProtos.ZMQVersionHandleMessageOrBuilder> 
          getVersionHandleFieldBuilder() {
        if (versionHandleBuilder_ == null) {
          versionHandleBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.opencog.atomspace.AtomSpaceProtos.ZMQVersionHandleMessage, org.opencog.atomspace.AtomSpaceProtos.ZMQVersionHandleMessage.Builder, org.opencog.atomspace.AtomSpaceProtos.ZMQVersionHandleMessageOrBuilder>(
                  versionHandle_,
                  getParentForChildren(),
                  isClean());
          versionHandle_ = null;
        }
        return versionHandleBuilder_;
      }

      // optional float U = 6;
      private float u_ ;
      /**
       * <code>optional float U = 6;</code>
       *
       * <pre>
       *indefinite
       * </pre>
       */
      public boolean hasU() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional float U = 6;</code>
       *
       * <pre>
       *indefinite
       * </pre>
       */
      public float getU() {
        return u_;
      }
      /**
       * <code>optional float U = 6;</code>
       *
       * <pre>
       *indefinite
       * </pre>
       */
      public Builder setU(float value) {
        bitField0_ |= 0x00000020;
        u_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float U = 6;</code>
       *
       * <pre>
       *indefinite
       * </pre>
       */
      public Builder clearU() {
        bitField0_ = (bitField0_ & ~0x00000020);
        u_ = 0F;
        onChanged();
        return this;
      }

      // optional float L = 7;
      private float l_ ;
      /**
       * <code>optional float L = 7;</code>
       *
       * <pre>
       *indefinite
       * </pre>
       */
      public boolean hasL() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional float L = 7;</code>
       *
       * <pre>
       *indefinite
       * </pre>
       */
      public float getL() {
        return l_;
      }
      /**
       * <code>optional float L = 7;</code>
       *
       * <pre>
       *indefinite
       * </pre>
       */
      public Builder setL(float value) {
        bitField0_ |= 0x00000040;
        l_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float L = 7;</code>
       *
       * <pre>
       *indefinite
       * </pre>
       */
      public Builder clearL() {
        bitField0_ = (bitField0_ & ~0x00000040);
        l_ = 0F;
        onChanged();
        return this;
      }

      // optional float confidenceLevel = 8;
      private float confidenceLevel_ ;
      /**
       * <code>optional float confidenceLevel = 8;</code>
       *
       * <pre>
       *indefinite
       * </pre>
       */
      public boolean hasConfidenceLevel() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional float confidenceLevel = 8;</code>
       *
       * <pre>
       *indefinite
       * </pre>
       */
      public float getConfidenceLevel() {
        return confidenceLevel_;
      }
      /**
       * <code>optional float confidenceLevel = 8;</code>
       *
       * <pre>
       *indefinite
       * </pre>
       */
      public Builder setConfidenceLevel(float value) {
        bitField0_ |= 0x00000080;
        confidenceLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float confidenceLevel = 8;</code>
       *
       * <pre>
       *indefinite
       * </pre>
       */
      public Builder clearConfidenceLevel() {
        bitField0_ = (bitField0_ & ~0x00000080);
        confidenceLevel_ = 0F;
        onChanged();
        return this;
      }

      // optional int32 symmetric = 9;
      private int symmetric_ ;
      /**
       * <code>optional int32 symmetric = 9;</code>
       *
       * <pre>
       *indefinite
       * </pre>
       */
      public boolean hasSymmetric() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 symmetric = 9;</code>
       *
       * <pre>
       *indefinite
       * </pre>
       */
      public int getSymmetric() {
        return symmetric_;
      }
      /**
       * <code>optional int32 symmetric = 9;</code>
       *
       * <pre>
       *indefinite
       * </pre>
       */
      public Builder setSymmetric(int value) {
        bitField0_ |= 0x00000100;
        symmetric_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 symmetric = 9;</code>
       *
       * <pre>
       *indefinite
       * </pre>
       */
      public Builder clearSymmetric() {
        bitField0_ = (bitField0_ & ~0x00000100);
        symmetric_ = 0;
        onChanged();
        return this;
      }

      // optional float diff = 10;
      private float diff_ ;
      /**
       * <code>optional float diff = 10;</code>
       *
       * <pre>
       *indefinite
       * </pre>
       */
      public boolean hasDiff() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional float diff = 10;</code>
       *
       * <pre>
       *indefinite
       * </pre>
       */
      public float getDiff() {
        return diff_;
      }
      /**
       * <code>optional float diff = 10;</code>
       *
       * <pre>
       *indefinite
       * </pre>
       */
      public Builder setDiff(float value) {
        bitField0_ |= 0x00000200;
        diff_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float diff = 10;</code>
       *
       * <pre>
       *indefinite
       * </pre>
       */
      public Builder clearDiff() {
        bitField0_ = (bitField0_ & ~0x00000200);
        diff_ = 0F;
        onChanged();
        return this;
      }

      // repeated float firstOrderDistribution = 11;
      private java.util.List<java.lang.Float> firstOrderDistribution_ = java.util.Collections.emptyList();
      private void ensureFirstOrderDistributionIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          firstOrderDistribution_ = new java.util.ArrayList<java.lang.Float>(firstOrderDistribution_);
          bitField0_ |= 0x00000400;
         }
      }
      /**
       * <code>repeated float firstOrderDistribution = 11;</code>
       *
       * <pre>
       *indefinite
       * </pre>
       */
      public java.util.List<java.lang.Float>
          getFirstOrderDistributionList() {
        return java.util.Collections.unmodifiableList(firstOrderDistribution_);
      }
      /**
       * <code>repeated float firstOrderDistribution = 11;</code>
       *
       * <pre>
       *indefinite
       * </pre>
       */
      public int getFirstOrderDistributionCount() {
        return firstOrderDistribution_.size();
      }
      /**
       * <code>repeated float firstOrderDistribution = 11;</code>
       *
       * <pre>
       *indefinite
       * </pre>
       */
      public float getFirstOrderDistribution(int index) {
        return firstOrderDistribution_.get(index);
      }
      /**
       * <code>repeated float firstOrderDistribution = 11;</code>
       *
       * <pre>
       *indefinite
       * </pre>
       */
      public Builder setFirstOrderDistribution(
          int index, float value) {
        ensureFirstOrderDistributionIsMutable();
        firstOrderDistribution_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float firstOrderDistribution = 11;</code>
       *
       * <pre>
       *indefinite
       * </pre>
       */
      public Builder addFirstOrderDistribution(float value) {
        ensureFirstOrderDistributionIsMutable();
        firstOrderDistribution_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float firstOrderDistribution = 11;</code>
       *
       * <pre>
       *indefinite
       * </pre>
       */
      public Builder addAllFirstOrderDistribution(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureFirstOrderDistributionIsMutable();
        super.addAll(values, firstOrderDistribution_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float firstOrderDistribution = 11;</code>
       *
       * <pre>
       *indefinite
       * </pre>
       */
      public Builder clearFirstOrderDistribution() {
        firstOrderDistribution_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ZMQSingleTruthValueMessage)
    }

    static {
      defaultInstance = new ZMQSingleTruthValueMessage(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ZMQSingleTruthValueMessage)
  }

  public interface ZMQTruthValueMessageOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .ZMQSingleTruthValueMessage singleTruthValue = 1;
    /**
     * <code>repeated .ZMQSingleTruthValueMessage singleTruthValue = 1;</code>
     *
     * <pre>
     *if size==1, check truthvalueclass, if size&gt;1, it's a composite truthvalue (first SingleTruthValueMessage is the primaryTV, the others are VersionedTVs)
     * </pre>
     */
    java.util.List<org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessage> 
        getSingleTruthValueList();
    /**
     * <code>repeated .ZMQSingleTruthValueMessage singleTruthValue = 1;</code>
     *
     * <pre>
     *if size==1, check truthvalueclass, if size&gt;1, it's a composite truthvalue (first SingleTruthValueMessage is the primaryTV, the others are VersionedTVs)
     * </pre>
     */
    org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessage getSingleTruthValue(int index);
    /**
     * <code>repeated .ZMQSingleTruthValueMessage singleTruthValue = 1;</code>
     *
     * <pre>
     *if size==1, check truthvalueclass, if size&gt;1, it's a composite truthvalue (first SingleTruthValueMessage is the primaryTV, the others are VersionedTVs)
     * </pre>
     */
    int getSingleTruthValueCount();
    /**
     * <code>repeated .ZMQSingleTruthValueMessage singleTruthValue = 1;</code>
     *
     * <pre>
     *if size==1, check truthvalueclass, if size&gt;1, it's a composite truthvalue (first SingleTruthValueMessage is the primaryTV, the others are VersionedTVs)
     * </pre>
     */
    java.util.List<? extends org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessageOrBuilder> 
        getSingleTruthValueOrBuilderList();
    /**
     * <code>repeated .ZMQSingleTruthValueMessage singleTruthValue = 1;</code>
     *
     * <pre>
     *if size==1, check truthvalueclass, if size&gt;1, it's a composite truthvalue (first SingleTruthValueMessage is the primaryTV, the others are VersionedTVs)
     * </pre>
     */
    org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessageOrBuilder getSingleTruthValueOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code ZMQTruthValueMessage}
   */
  public static final class ZMQTruthValueMessage extends
      com.google.protobuf.GeneratedMessage
      implements ZMQTruthValueMessageOrBuilder {
    // Use ZMQTruthValueMessage.newBuilder() to construct.
    private ZMQTruthValueMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ZMQTruthValueMessage(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ZMQTruthValueMessage defaultInstance;
    public static ZMQTruthValueMessage getDefaultInstance() {
      return defaultInstance;
    }

    public ZMQTruthValueMessage getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ZMQTruthValueMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                singleTruthValue_ = new java.util.ArrayList<org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessage>();
                mutable_bitField0_ |= 0x00000001;
              }
              singleTruthValue_.add(input.readMessage(org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessage.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          singleTruthValue_ = java.util.Collections.unmodifiableList(singleTruthValue_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencog.atomspace.AtomSpaceProtos.internal_static_ZMQTruthValueMessage_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencog.atomspace.AtomSpaceProtos.internal_static_ZMQTruthValueMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueMessage.class, org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueMessage.Builder.class);
    }

    public static com.google.protobuf.Parser<ZMQTruthValueMessage> PARSER =
        new com.google.protobuf.AbstractParser<ZMQTruthValueMessage>() {
      public ZMQTruthValueMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ZMQTruthValueMessage(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ZMQTruthValueMessage> getParserForType() {
      return PARSER;
    }

    // repeated .ZMQSingleTruthValueMessage singleTruthValue = 1;
    public static final int SINGLETRUTHVALUE_FIELD_NUMBER = 1;
    private java.util.List<org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessage> singleTruthValue_;
    /**
     * <code>repeated .ZMQSingleTruthValueMessage singleTruthValue = 1;</code>
     *
     * <pre>
     *if size==1, check truthvalueclass, if size&gt;1, it's a composite truthvalue (first SingleTruthValueMessage is the primaryTV, the others are VersionedTVs)
     * </pre>
     */
    public java.util.List<org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessage> getSingleTruthValueList() {
      return singleTruthValue_;
    }
    /**
     * <code>repeated .ZMQSingleTruthValueMessage singleTruthValue = 1;</code>
     *
     * <pre>
     *if size==1, check truthvalueclass, if size&gt;1, it's a composite truthvalue (first SingleTruthValueMessage is the primaryTV, the others are VersionedTVs)
     * </pre>
     */
    public java.util.List<? extends org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessageOrBuilder> 
        getSingleTruthValueOrBuilderList() {
      return singleTruthValue_;
    }
    /**
     * <code>repeated .ZMQSingleTruthValueMessage singleTruthValue = 1;</code>
     *
     * <pre>
     *if size==1, check truthvalueclass, if size&gt;1, it's a composite truthvalue (first SingleTruthValueMessage is the primaryTV, the others are VersionedTVs)
     * </pre>
     */
    public int getSingleTruthValueCount() {
      return singleTruthValue_.size();
    }
    /**
     * <code>repeated .ZMQSingleTruthValueMessage singleTruthValue = 1;</code>
     *
     * <pre>
     *if size==1, check truthvalueclass, if size&gt;1, it's a composite truthvalue (first SingleTruthValueMessage is the primaryTV, the others are VersionedTVs)
     * </pre>
     */
    public org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessage getSingleTruthValue(int index) {
      return singleTruthValue_.get(index);
    }
    /**
     * <code>repeated .ZMQSingleTruthValueMessage singleTruthValue = 1;</code>
     *
     * <pre>
     *if size==1, check truthvalueclass, if size&gt;1, it's a composite truthvalue (first SingleTruthValueMessage is the primaryTV, the others are VersionedTVs)
     * </pre>
     */
    public org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessageOrBuilder getSingleTruthValueOrBuilder(
        int index) {
      return singleTruthValue_.get(index);
    }

    private void initFields() {
      singleTruthValue_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getSingleTruthValueCount(); i++) {
        if (!getSingleTruthValue(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < singleTruthValue_.size(); i++) {
        output.writeMessage(1, singleTruthValue_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < singleTruthValue_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, singleTruthValue_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ZMQTruthValueMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencog.atomspace.AtomSpaceProtos.internal_static_ZMQTruthValueMessage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencog.atomspace.AtomSpaceProtos.internal_static_ZMQTruthValueMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueMessage.class, org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueMessage.Builder.class);
      }

      // Construct using org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSingleTruthValueFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (singleTruthValueBuilder_ == null) {
          singleTruthValue_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          singleTruthValueBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencog.atomspace.AtomSpaceProtos.internal_static_ZMQTruthValueMessage_descriptor;
      }

      public org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueMessage getDefaultInstanceForType() {
        return org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueMessage.getDefaultInstance();
      }

      public org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueMessage build() {
        org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueMessage buildPartial() {
        org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueMessage result = new org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueMessage(this);
        int from_bitField0_ = bitField0_;
        if (singleTruthValueBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            singleTruthValue_ = java.util.Collections.unmodifiableList(singleTruthValue_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.singleTruthValue_ = singleTruthValue_;
        } else {
          result.singleTruthValue_ = singleTruthValueBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueMessage) {
          return mergeFrom((org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueMessage other) {
        if (other == org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueMessage.getDefaultInstance()) return this;
        if (singleTruthValueBuilder_ == null) {
          if (!other.singleTruthValue_.isEmpty()) {
            if (singleTruthValue_.isEmpty()) {
              singleTruthValue_ = other.singleTruthValue_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureSingleTruthValueIsMutable();
              singleTruthValue_.addAll(other.singleTruthValue_);
            }
            onChanged();
          }
        } else {
          if (!other.singleTruthValue_.isEmpty()) {
            if (singleTruthValueBuilder_.isEmpty()) {
              singleTruthValueBuilder_.dispose();
              singleTruthValueBuilder_ = null;
              singleTruthValue_ = other.singleTruthValue_;
              bitField0_ = (bitField0_ & ~0x00000001);
              singleTruthValueBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSingleTruthValueFieldBuilder() : null;
            } else {
              singleTruthValueBuilder_.addAllMessages(other.singleTruthValue_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getSingleTruthValueCount(); i++) {
          if (!getSingleTruthValue(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueMessage) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .ZMQSingleTruthValueMessage singleTruthValue = 1;
      private java.util.List<org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessage> singleTruthValue_ =
        java.util.Collections.emptyList();
      private void ensureSingleTruthValueIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          singleTruthValue_ = new java.util.ArrayList<org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessage>(singleTruthValue_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessage, org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessage.Builder, org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessageOrBuilder> singleTruthValueBuilder_;

      /**
       * <code>repeated .ZMQSingleTruthValueMessage singleTruthValue = 1;</code>
       *
       * <pre>
       *if size==1, check truthvalueclass, if size&gt;1, it's a composite truthvalue (first SingleTruthValueMessage is the primaryTV, the others are VersionedTVs)
       * </pre>
       */
      public java.util.List<org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessage> getSingleTruthValueList() {
        if (singleTruthValueBuilder_ == null) {
          return java.util.Collections.unmodifiableList(singleTruthValue_);
        } else {
          return singleTruthValueBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .ZMQSingleTruthValueMessage singleTruthValue = 1;</code>
       *
       * <pre>
       *if size==1, check truthvalueclass, if size&gt;1, it's a composite truthvalue (first SingleTruthValueMessage is the primaryTV, the others are VersionedTVs)
       * </pre>
       */
      public int getSingleTruthValueCount() {
        if (singleTruthValueBuilder_ == null) {
          return singleTruthValue_.size();
        } else {
          return singleTruthValueBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .ZMQSingleTruthValueMessage singleTruthValue = 1;</code>
       *
       * <pre>
       *if size==1, check truthvalueclass, if size&gt;1, it's a composite truthvalue (first SingleTruthValueMessage is the primaryTV, the others are VersionedTVs)
       * </pre>
       */
      public org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessage getSingleTruthValue(int index) {
        if (singleTruthValueBuilder_ == null) {
          return singleTruthValue_.get(index);
        } else {
          return singleTruthValueBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .ZMQSingleTruthValueMessage singleTruthValue = 1;</code>
       *
       * <pre>
       *if size==1, check truthvalueclass, if size&gt;1, it's a composite truthvalue (first SingleTruthValueMessage is the primaryTV, the others are VersionedTVs)
       * </pre>
       */
      public Builder setSingleTruthValue(
          int index, org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessage value) {
        if (singleTruthValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSingleTruthValueIsMutable();
          singleTruthValue_.set(index, value);
          onChanged();
        } else {
          singleTruthValueBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ZMQSingleTruthValueMessage singleTruthValue = 1;</code>
       *
       * <pre>
       *if size==1, check truthvalueclass, if size&gt;1, it's a composite truthvalue (first SingleTruthValueMessage is the primaryTV, the others are VersionedTVs)
       * </pre>
       */
      public Builder setSingleTruthValue(
          int index, org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessage.Builder builderForValue) {
        if (singleTruthValueBuilder_ == null) {
          ensureSingleTruthValueIsMutable();
          singleTruthValue_.set(index, builderForValue.build());
          onChanged();
        } else {
          singleTruthValueBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ZMQSingleTruthValueMessage singleTruthValue = 1;</code>
       *
       * <pre>
       *if size==1, check truthvalueclass, if size&gt;1, it's a composite truthvalue (first SingleTruthValueMessage is the primaryTV, the others are VersionedTVs)
       * </pre>
       */
      public Builder addSingleTruthValue(org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessage value) {
        if (singleTruthValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSingleTruthValueIsMutable();
          singleTruthValue_.add(value);
          onChanged();
        } else {
          singleTruthValueBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .ZMQSingleTruthValueMessage singleTruthValue = 1;</code>
       *
       * <pre>
       *if size==1, check truthvalueclass, if size&gt;1, it's a composite truthvalue (first SingleTruthValueMessage is the primaryTV, the others are VersionedTVs)
       * </pre>
       */
      public Builder addSingleTruthValue(
          int index, org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessage value) {
        if (singleTruthValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSingleTruthValueIsMutable();
          singleTruthValue_.add(index, value);
          onChanged();
        } else {
          singleTruthValueBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ZMQSingleTruthValueMessage singleTruthValue = 1;</code>
       *
       * <pre>
       *if size==1, check truthvalueclass, if size&gt;1, it's a composite truthvalue (first SingleTruthValueMessage is the primaryTV, the others are VersionedTVs)
       * </pre>
       */
      public Builder addSingleTruthValue(
          org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessage.Builder builderForValue) {
        if (singleTruthValueBuilder_ == null) {
          ensureSingleTruthValueIsMutable();
          singleTruthValue_.add(builderForValue.build());
          onChanged();
        } else {
          singleTruthValueBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ZMQSingleTruthValueMessage singleTruthValue = 1;</code>
       *
       * <pre>
       *if size==1, check truthvalueclass, if size&gt;1, it's a composite truthvalue (first SingleTruthValueMessage is the primaryTV, the others are VersionedTVs)
       * </pre>
       */
      public Builder addSingleTruthValue(
          int index, org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessage.Builder builderForValue) {
        if (singleTruthValueBuilder_ == null) {
          ensureSingleTruthValueIsMutable();
          singleTruthValue_.add(index, builderForValue.build());
          onChanged();
        } else {
          singleTruthValueBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ZMQSingleTruthValueMessage singleTruthValue = 1;</code>
       *
       * <pre>
       *if size==1, check truthvalueclass, if size&gt;1, it's a composite truthvalue (first SingleTruthValueMessage is the primaryTV, the others are VersionedTVs)
       * </pre>
       */
      public Builder addAllSingleTruthValue(
          java.lang.Iterable<? extends org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessage> values) {
        if (singleTruthValueBuilder_ == null) {
          ensureSingleTruthValueIsMutable();
          super.addAll(values, singleTruthValue_);
          onChanged();
        } else {
          singleTruthValueBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .ZMQSingleTruthValueMessage singleTruthValue = 1;</code>
       *
       * <pre>
       *if size==1, check truthvalueclass, if size&gt;1, it's a composite truthvalue (first SingleTruthValueMessage is the primaryTV, the others are VersionedTVs)
       * </pre>
       */
      public Builder clearSingleTruthValue() {
        if (singleTruthValueBuilder_ == null) {
          singleTruthValue_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          singleTruthValueBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .ZMQSingleTruthValueMessage singleTruthValue = 1;</code>
       *
       * <pre>
       *if size==1, check truthvalueclass, if size&gt;1, it's a composite truthvalue (first SingleTruthValueMessage is the primaryTV, the others are VersionedTVs)
       * </pre>
       */
      public Builder removeSingleTruthValue(int index) {
        if (singleTruthValueBuilder_ == null) {
          ensureSingleTruthValueIsMutable();
          singleTruthValue_.remove(index);
          onChanged();
        } else {
          singleTruthValueBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .ZMQSingleTruthValueMessage singleTruthValue = 1;</code>
       *
       * <pre>
       *if size==1, check truthvalueclass, if size&gt;1, it's a composite truthvalue (first SingleTruthValueMessage is the primaryTV, the others are VersionedTVs)
       * </pre>
       */
      public org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessage.Builder getSingleTruthValueBuilder(
          int index) {
        return getSingleTruthValueFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .ZMQSingleTruthValueMessage singleTruthValue = 1;</code>
       *
       * <pre>
       *if size==1, check truthvalueclass, if size&gt;1, it's a composite truthvalue (first SingleTruthValueMessage is the primaryTV, the others are VersionedTVs)
       * </pre>
       */
      public org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessageOrBuilder getSingleTruthValueOrBuilder(
          int index) {
        if (singleTruthValueBuilder_ == null) {
          return singleTruthValue_.get(index);  } else {
          return singleTruthValueBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .ZMQSingleTruthValueMessage singleTruthValue = 1;</code>
       *
       * <pre>
       *if size==1, check truthvalueclass, if size&gt;1, it's a composite truthvalue (first SingleTruthValueMessage is the primaryTV, the others are VersionedTVs)
       * </pre>
       */
      public java.util.List<? extends org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessageOrBuilder> 
           getSingleTruthValueOrBuilderList() {
        if (singleTruthValueBuilder_ != null) {
          return singleTruthValueBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(singleTruthValue_);
        }
      }
      /**
       * <code>repeated .ZMQSingleTruthValueMessage singleTruthValue = 1;</code>
       *
       * <pre>
       *if size==1, check truthvalueclass, if size&gt;1, it's a composite truthvalue (first SingleTruthValueMessage is the primaryTV, the others are VersionedTVs)
       * </pre>
       */
      public org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessage.Builder addSingleTruthValueBuilder() {
        return getSingleTruthValueFieldBuilder().addBuilder(
            org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessage.getDefaultInstance());
      }
      /**
       * <code>repeated .ZMQSingleTruthValueMessage singleTruthValue = 1;</code>
       *
       * <pre>
       *if size==1, check truthvalueclass, if size&gt;1, it's a composite truthvalue (first SingleTruthValueMessage is the primaryTV, the others are VersionedTVs)
       * </pre>
       */
      public org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessage.Builder addSingleTruthValueBuilder(
          int index) {
        return getSingleTruthValueFieldBuilder().addBuilder(
            index, org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessage.getDefaultInstance());
      }
      /**
       * <code>repeated .ZMQSingleTruthValueMessage singleTruthValue = 1;</code>
       *
       * <pre>
       *if size==1, check truthvalueclass, if size&gt;1, it's a composite truthvalue (first SingleTruthValueMessage is the primaryTV, the others are VersionedTVs)
       * </pre>
       */
      public java.util.List<org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessage.Builder> 
           getSingleTruthValueBuilderList() {
        return getSingleTruthValueFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessage, org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessage.Builder, org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessageOrBuilder> 
          getSingleTruthValueFieldBuilder() {
        if (singleTruthValueBuilder_ == null) {
          singleTruthValueBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessage, org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessage.Builder, org.opencog.atomspace.AtomSpaceProtos.ZMQSingleTruthValueMessageOrBuilder>(
                  singleTruthValue_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          singleTruthValue_ = null;
        }
        return singleTruthValueBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:ZMQTruthValueMessage)
    }

    static {
      defaultInstance = new ZMQTruthValueMessage(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ZMQTruthValueMessage)
  }

  public interface ZMQTrailMessageOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 maxSize = 1;
    /**
     * <code>required int32 maxSize = 1;</code>
     */
    boolean hasMaxSize();
    /**
     * <code>required int32 maxSize = 1;</code>
     */
    int getMaxSize();

    // repeated uint64 trail = 2;
    /**
     * <code>repeated uint64 trail = 2;</code>
     */
    java.util.List<java.lang.Long> getTrailList();
    /**
     * <code>repeated uint64 trail = 2;</code>
     */
    int getTrailCount();
    /**
     * <code>repeated uint64 trail = 2;</code>
     */
    long getTrail(int index);
  }
  /**
   * Protobuf type {@code ZMQTrailMessage}
   */
  public static final class ZMQTrailMessage extends
      com.google.protobuf.GeneratedMessage
      implements ZMQTrailMessageOrBuilder {
    // Use ZMQTrailMessage.newBuilder() to construct.
    private ZMQTrailMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ZMQTrailMessage(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ZMQTrailMessage defaultInstance;
    public static ZMQTrailMessage getDefaultInstance() {
      return defaultInstance;
    }

    public ZMQTrailMessage getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ZMQTrailMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              maxSize_ = input.readInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                trail_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000002;
              }
              trail_.add(input.readUInt64());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                trail_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                trail_.add(input.readUInt64());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          trail_ = java.util.Collections.unmodifiableList(trail_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencog.atomspace.AtomSpaceProtos.internal_static_ZMQTrailMessage_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencog.atomspace.AtomSpaceProtos.internal_static_ZMQTrailMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencog.atomspace.AtomSpaceProtos.ZMQTrailMessage.class, org.opencog.atomspace.AtomSpaceProtos.ZMQTrailMessage.Builder.class);
    }

    public static com.google.protobuf.Parser<ZMQTrailMessage> PARSER =
        new com.google.protobuf.AbstractParser<ZMQTrailMessage>() {
      public ZMQTrailMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ZMQTrailMessage(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ZMQTrailMessage> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 maxSize = 1;
    public static final int MAXSIZE_FIELD_NUMBER = 1;
    private int maxSize_;
    /**
     * <code>required int32 maxSize = 1;</code>
     */
    public boolean hasMaxSize() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 maxSize = 1;</code>
     */
    public int getMaxSize() {
      return maxSize_;
    }

    // repeated uint64 trail = 2;
    public static final int TRAIL_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Long> trail_;
    /**
     * <code>repeated uint64 trail = 2;</code>
     */
    public java.util.List<java.lang.Long>
        getTrailList() {
      return trail_;
    }
    /**
     * <code>repeated uint64 trail = 2;</code>
     */
    public int getTrailCount() {
      return trail_.size();
    }
    /**
     * <code>repeated uint64 trail = 2;</code>
     */
    public long getTrail(int index) {
      return trail_.get(index);
    }

    private void initFields() {
      maxSize_ = 0;
      trail_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasMaxSize()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, maxSize_);
      }
      for (int i = 0; i < trail_.size(); i++) {
        output.writeUInt64(2, trail_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, maxSize_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < trail_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt64SizeNoTag(trail_.get(i));
        }
        size += dataSize;
        size += 1 * getTrailList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.opencog.atomspace.AtomSpaceProtos.ZMQTrailMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQTrailMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQTrailMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQTrailMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQTrailMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQTrailMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQTrailMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQTrailMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQTrailMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQTrailMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.opencog.atomspace.AtomSpaceProtos.ZMQTrailMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ZMQTrailMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.opencog.atomspace.AtomSpaceProtos.ZMQTrailMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencog.atomspace.AtomSpaceProtos.internal_static_ZMQTrailMessage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencog.atomspace.AtomSpaceProtos.internal_static_ZMQTrailMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencog.atomspace.AtomSpaceProtos.ZMQTrailMessage.class, org.opencog.atomspace.AtomSpaceProtos.ZMQTrailMessage.Builder.class);
      }

      // Construct using org.opencog.atomspace.AtomSpaceProtos.ZMQTrailMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        maxSize_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        trail_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencog.atomspace.AtomSpaceProtos.internal_static_ZMQTrailMessage_descriptor;
      }

      public org.opencog.atomspace.AtomSpaceProtos.ZMQTrailMessage getDefaultInstanceForType() {
        return org.opencog.atomspace.AtomSpaceProtos.ZMQTrailMessage.getDefaultInstance();
      }

      public org.opencog.atomspace.AtomSpaceProtos.ZMQTrailMessage build() {
        org.opencog.atomspace.AtomSpaceProtos.ZMQTrailMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.opencog.atomspace.AtomSpaceProtos.ZMQTrailMessage buildPartial() {
        org.opencog.atomspace.AtomSpaceProtos.ZMQTrailMessage result = new org.opencog.atomspace.AtomSpaceProtos.ZMQTrailMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.maxSize_ = maxSize_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          trail_ = java.util.Collections.unmodifiableList(trail_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.trail_ = trail_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencog.atomspace.AtomSpaceProtos.ZMQTrailMessage) {
          return mergeFrom((org.opencog.atomspace.AtomSpaceProtos.ZMQTrailMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencog.atomspace.AtomSpaceProtos.ZMQTrailMessage other) {
        if (other == org.opencog.atomspace.AtomSpaceProtos.ZMQTrailMessage.getDefaultInstance()) return this;
        if (other.hasMaxSize()) {
          setMaxSize(other.getMaxSize());
        }
        if (!other.trail_.isEmpty()) {
          if (trail_.isEmpty()) {
            trail_ = other.trail_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureTrailIsMutable();
            trail_.addAll(other.trail_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasMaxSize()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencog.atomspace.AtomSpaceProtos.ZMQTrailMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencog.atomspace.AtomSpaceProtos.ZMQTrailMessage) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 maxSize = 1;
      private int maxSize_ ;
      /**
       * <code>required int32 maxSize = 1;</code>
       */
      public boolean hasMaxSize() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 maxSize = 1;</code>
       */
      public int getMaxSize() {
        return maxSize_;
      }
      /**
       * <code>required int32 maxSize = 1;</code>
       */
      public Builder setMaxSize(int value) {
        bitField0_ |= 0x00000001;
        maxSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 maxSize = 1;</code>
       */
      public Builder clearMaxSize() {
        bitField0_ = (bitField0_ & ~0x00000001);
        maxSize_ = 0;
        onChanged();
        return this;
      }

      // repeated uint64 trail = 2;
      private java.util.List<java.lang.Long> trail_ = java.util.Collections.emptyList();
      private void ensureTrailIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          trail_ = new java.util.ArrayList<java.lang.Long>(trail_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated uint64 trail = 2;</code>
       */
      public java.util.List<java.lang.Long>
          getTrailList() {
        return java.util.Collections.unmodifiableList(trail_);
      }
      /**
       * <code>repeated uint64 trail = 2;</code>
       */
      public int getTrailCount() {
        return trail_.size();
      }
      /**
       * <code>repeated uint64 trail = 2;</code>
       */
      public long getTrail(int index) {
        return trail_.get(index);
      }
      /**
       * <code>repeated uint64 trail = 2;</code>
       */
      public Builder setTrail(
          int index, long value) {
        ensureTrailIsMutable();
        trail_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 trail = 2;</code>
       */
      public Builder addTrail(long value) {
        ensureTrailIsMutable();
        trail_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 trail = 2;</code>
       */
      public Builder addAllTrail(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureTrailIsMutable();
        super.addAll(values, trail_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 trail = 2;</code>
       */
      public Builder clearTrail() {
        trail_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ZMQTrailMessage)
    }

    static {
      defaultInstance = new ZMQTrailMessage(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ZMQTrailMessage)
  }

  public interface ZMQAtomMessageOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .ZMQAtomType atomtype = 1;
    /**
     * <code>required .ZMQAtomType atomtype = 1;</code>
     */
    boolean hasAtomtype();
    /**
     * <code>required .ZMQAtomType atomtype = 1;</code>
     */
    org.opencog.atomspace.AtomSpaceProtos.ZMQAtomType getAtomtype();

    // required .ZMQAttentionValueHolderMessage attentionvalueholder = 2;
    /**
     * <code>required .ZMQAttentionValueHolderMessage attentionvalueholder = 2;</code>
     */
    boolean hasAttentionvalueholder();
    /**
     * <code>required .ZMQAttentionValueHolderMessage attentionvalueholder = 2;</code>
     */
    org.opencog.atomspace.AtomSpaceProtos.ZMQAttentionValueHolderMessage getAttentionvalueholder();
    /**
     * <code>required .ZMQAttentionValueHolderMessage attentionvalueholder = 2;</code>
     */
    org.opencog.atomspace.AtomSpaceProtos.ZMQAttentionValueHolderMessageOrBuilder getAttentionvalueholderOrBuilder();

    // required uint64 handle = 3;
    /**
     * <code>required uint64 handle = 3;</code>
     */
    boolean hasHandle();
    /**
     * <code>required uint64 handle = 3;</code>
     */
    long getHandle();

    // repeated uint64 incoming = 4;
    /**
     * <code>repeated uint64 incoming = 4;</code>
     */
    java.util.List<java.lang.Long> getIncomingList();
    /**
     * <code>repeated uint64 incoming = 4;</code>
     */
    int getIncomingCount();
    /**
     * <code>repeated uint64 incoming = 4;</code>
     */
    long getIncoming(int index);

    // required int32 type = 5;
    /**
     * <code>required int32 type = 5;</code>
     */
    boolean hasType();
    /**
     * <code>required int32 type = 5;</code>
     */
    int getType();

    // optional int32 flags = 6;
    /**
     * <code>optional int32 flags = 6;</code>
     */
    boolean hasFlags();
    /**
     * <code>optional int32 flags = 6;</code>
     */
    int getFlags();

    // optional .ZMQTruthValueMessage truthValue = 7;
    /**
     * <code>optional .ZMQTruthValueMessage truthValue = 7;</code>
     */
    boolean hasTruthValue();
    /**
     * <code>optional .ZMQTruthValueMessage truthValue = 7;</code>
     */
    org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueMessage getTruthValue();
    /**
     * <code>optional .ZMQTruthValueMessage truthValue = 7;</code>
     */
    org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueMessageOrBuilder getTruthValueOrBuilder();

    // optional string name = 8;
    /**
     * <code>optional string name = 8;</code>
     *
     * <pre>
     *node
     * </pre>
     */
    boolean hasName();
    /**
     * <code>optional string name = 8;</code>
     *
     * <pre>
     *node
     * </pre>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 8;</code>
     *
     * <pre>
     *node
     * </pre>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // repeated uint64 outgoing = 9;
    /**
     * <code>repeated uint64 outgoing = 9;</code>
     *
     * <pre>
     *link
     * </pre>
     */
    java.util.List<java.lang.Long> getOutgoingList();
    /**
     * <code>repeated uint64 outgoing = 9;</code>
     *
     * <pre>
     *link
     * </pre>
     */
    int getOutgoingCount();
    /**
     * <code>repeated uint64 outgoing = 9;</code>
     *
     * <pre>
     *link
     * </pre>
     */
    long getOutgoing(int index);

    // optional .ZMQTrailMessage trail = 10;
    /**
     * <code>optional .ZMQTrailMessage trail = 10;</code>
     *
     * <pre>
     *link
     * </pre>
     */
    boolean hasTrail();
    /**
     * <code>optional .ZMQTrailMessage trail = 10;</code>
     *
     * <pre>
     *link
     * </pre>
     */
    org.opencog.atomspace.AtomSpaceProtos.ZMQTrailMessage getTrail();
    /**
     * <code>optional .ZMQTrailMessage trail = 10;</code>
     *
     * <pre>
     *link
     * </pre>
     */
    org.opencog.atomspace.AtomSpaceProtos.ZMQTrailMessageOrBuilder getTrailOrBuilder();

    // optional string atom_type_str = 11;
    /**
     * <code>optional string atom_type_str = 11;</code>
     *
     * <pre>
     * FIXME: change to int then put a lookup table
     * </pre>
     */
    boolean hasAtomTypeStr();
    /**
     * <code>optional string atom_type_str = 11;</code>
     *
     * <pre>
     * FIXME: change to int then put a lookup table
     * </pre>
     */
    java.lang.String getAtomTypeStr();
    /**
     * <code>optional string atom_type_str = 11;</code>
     *
     * <pre>
     * FIXME: change to int then put a lookup table
     * </pre>
     */
    com.google.protobuf.ByteString
        getAtomTypeStrBytes();
  }
  /**
   * Protobuf type {@code ZMQAtomMessage}
   */
  public static final class ZMQAtomMessage extends
      com.google.protobuf.GeneratedMessage
      implements ZMQAtomMessageOrBuilder {
    // Use ZMQAtomMessage.newBuilder() to construct.
    private ZMQAtomMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ZMQAtomMessage(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ZMQAtomMessage defaultInstance;
    public static ZMQAtomMessage getDefaultInstance() {
      return defaultInstance;
    }

    public ZMQAtomMessage getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ZMQAtomMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              org.opencog.atomspace.AtomSpaceProtos.ZMQAtomType value = org.opencog.atomspace.AtomSpaceProtos.ZMQAtomType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                atomtype_ = value;
              }
              break;
            }
            case 18: {
              org.opencog.atomspace.AtomSpaceProtos.ZMQAttentionValueHolderMessage.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = attentionvalueholder_.toBuilder();
              }
              attentionvalueholder_ = input.readMessage(org.opencog.atomspace.AtomSpaceProtos.ZMQAttentionValueHolderMessage.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(attentionvalueholder_);
                attentionvalueholder_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              handle_ = input.readUInt64();
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                incoming_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000008;
              }
              incoming_.add(input.readUInt64());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                incoming_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                incoming_.add(input.readUInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              type_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              flags_ = input.readInt32();
              break;
            }
            case 58: {
              org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueMessage.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = truthValue_.toBuilder();
              }
              truthValue_ = input.readMessage(org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueMessage.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(truthValue_);
                truthValue_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 66: {
              bitField0_ |= 0x00000040;
              name_ = input.readBytes();
              break;
            }
            case 72: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                outgoing_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000100;
              }
              outgoing_.add(input.readUInt64());
              break;
            }
            case 74: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100) && input.getBytesUntilLimit() > 0) {
                outgoing_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000100;
              }
              while (input.getBytesUntilLimit() > 0) {
                outgoing_.add(input.readUInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 82: {
              org.opencog.atomspace.AtomSpaceProtos.ZMQTrailMessage.Builder subBuilder = null;
              if (((bitField0_ & 0x00000080) == 0x00000080)) {
                subBuilder = trail_.toBuilder();
              }
              trail_ = input.readMessage(org.opencog.atomspace.AtomSpaceProtos.ZMQTrailMessage.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(trail_);
                trail_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000080;
              break;
            }
            case 90: {
              bitField0_ |= 0x00000100;
              atomTypeStr_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          incoming_ = java.util.Collections.unmodifiableList(incoming_);
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          outgoing_ = java.util.Collections.unmodifiableList(outgoing_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencog.atomspace.AtomSpaceProtos.internal_static_ZMQAtomMessage_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencog.atomspace.AtomSpaceProtos.internal_static_ZMQAtomMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage.class, org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage.Builder.class);
    }

    public static com.google.protobuf.Parser<ZMQAtomMessage> PARSER =
        new com.google.protobuf.AbstractParser<ZMQAtomMessage>() {
      public ZMQAtomMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ZMQAtomMessage(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ZMQAtomMessage> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .ZMQAtomType atomtype = 1;
    public static final int ATOMTYPE_FIELD_NUMBER = 1;
    private org.opencog.atomspace.AtomSpaceProtos.ZMQAtomType atomtype_;
    /**
     * <code>required .ZMQAtomType atomtype = 1;</code>
     */
    public boolean hasAtomtype() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .ZMQAtomType atomtype = 1;</code>
     */
    public org.opencog.atomspace.AtomSpaceProtos.ZMQAtomType getAtomtype() {
      return atomtype_;
    }

    // required .ZMQAttentionValueHolderMessage attentionvalueholder = 2;
    public static final int ATTENTIONVALUEHOLDER_FIELD_NUMBER = 2;
    private org.opencog.atomspace.AtomSpaceProtos.ZMQAttentionValueHolderMessage attentionvalueholder_;
    /**
     * <code>required .ZMQAttentionValueHolderMessage attentionvalueholder = 2;</code>
     */
    public boolean hasAttentionvalueholder() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .ZMQAttentionValueHolderMessage attentionvalueholder = 2;</code>
     */
    public org.opencog.atomspace.AtomSpaceProtos.ZMQAttentionValueHolderMessage getAttentionvalueholder() {
      return attentionvalueholder_;
    }
    /**
     * <code>required .ZMQAttentionValueHolderMessage attentionvalueholder = 2;</code>
     */
    public org.opencog.atomspace.AtomSpaceProtos.ZMQAttentionValueHolderMessageOrBuilder getAttentionvalueholderOrBuilder() {
      return attentionvalueholder_;
    }

    // required uint64 handle = 3;
    public static final int HANDLE_FIELD_NUMBER = 3;
    private long handle_;
    /**
     * <code>required uint64 handle = 3;</code>
     */
    public boolean hasHandle() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint64 handle = 3;</code>
     */
    public long getHandle() {
      return handle_;
    }

    // repeated uint64 incoming = 4;
    public static final int INCOMING_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Long> incoming_;
    /**
     * <code>repeated uint64 incoming = 4;</code>
     */
    public java.util.List<java.lang.Long>
        getIncomingList() {
      return incoming_;
    }
    /**
     * <code>repeated uint64 incoming = 4;</code>
     */
    public int getIncomingCount() {
      return incoming_.size();
    }
    /**
     * <code>repeated uint64 incoming = 4;</code>
     */
    public long getIncoming(int index) {
      return incoming_.get(index);
    }

    // required int32 type = 5;
    public static final int TYPE_FIELD_NUMBER = 5;
    private int type_;
    /**
     * <code>required int32 type = 5;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 type = 5;</code>
     */
    public int getType() {
      return type_;
    }

    // optional int32 flags = 6;
    public static final int FLAGS_FIELD_NUMBER = 6;
    private int flags_;
    /**
     * <code>optional int32 flags = 6;</code>
     */
    public boolean hasFlags() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 flags = 6;</code>
     */
    public int getFlags() {
      return flags_;
    }

    // optional .ZMQTruthValueMessage truthValue = 7;
    public static final int TRUTHVALUE_FIELD_NUMBER = 7;
    private org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueMessage truthValue_;
    /**
     * <code>optional .ZMQTruthValueMessage truthValue = 7;</code>
     */
    public boolean hasTruthValue() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .ZMQTruthValueMessage truthValue = 7;</code>
     */
    public org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueMessage getTruthValue() {
      return truthValue_;
    }
    /**
     * <code>optional .ZMQTruthValueMessage truthValue = 7;</code>
     */
    public org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueMessageOrBuilder getTruthValueOrBuilder() {
      return truthValue_;
    }

    // optional string name = 8;
    public static final int NAME_FIELD_NUMBER = 8;
    private java.lang.Object name_;
    /**
     * <code>optional string name = 8;</code>
     *
     * <pre>
     *node
     * </pre>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional string name = 8;</code>
     *
     * <pre>
     *node
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 8;</code>
     *
     * <pre>
     *node
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated uint64 outgoing = 9;
    public static final int OUTGOING_FIELD_NUMBER = 9;
    private java.util.List<java.lang.Long> outgoing_;
    /**
     * <code>repeated uint64 outgoing = 9;</code>
     *
     * <pre>
     *link
     * </pre>
     */
    public java.util.List<java.lang.Long>
        getOutgoingList() {
      return outgoing_;
    }
    /**
     * <code>repeated uint64 outgoing = 9;</code>
     *
     * <pre>
     *link
     * </pre>
     */
    public int getOutgoingCount() {
      return outgoing_.size();
    }
    /**
     * <code>repeated uint64 outgoing = 9;</code>
     *
     * <pre>
     *link
     * </pre>
     */
    public long getOutgoing(int index) {
      return outgoing_.get(index);
    }

    // optional .ZMQTrailMessage trail = 10;
    public static final int TRAIL_FIELD_NUMBER = 10;
    private org.opencog.atomspace.AtomSpaceProtos.ZMQTrailMessage trail_;
    /**
     * <code>optional .ZMQTrailMessage trail = 10;</code>
     *
     * <pre>
     *link
     * </pre>
     */
    public boolean hasTrail() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .ZMQTrailMessage trail = 10;</code>
     *
     * <pre>
     *link
     * </pre>
     */
    public org.opencog.atomspace.AtomSpaceProtos.ZMQTrailMessage getTrail() {
      return trail_;
    }
    /**
     * <code>optional .ZMQTrailMessage trail = 10;</code>
     *
     * <pre>
     *link
     * </pre>
     */
    public org.opencog.atomspace.AtomSpaceProtos.ZMQTrailMessageOrBuilder getTrailOrBuilder() {
      return trail_;
    }

    // optional string atom_type_str = 11;
    public static final int ATOM_TYPE_STR_FIELD_NUMBER = 11;
    private java.lang.Object atomTypeStr_;
    /**
     * <code>optional string atom_type_str = 11;</code>
     *
     * <pre>
     * FIXME: change to int then put a lookup table
     * </pre>
     */
    public boolean hasAtomTypeStr() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional string atom_type_str = 11;</code>
     *
     * <pre>
     * FIXME: change to int then put a lookup table
     * </pre>
     */
    public java.lang.String getAtomTypeStr() {
      java.lang.Object ref = atomTypeStr_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          atomTypeStr_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string atom_type_str = 11;</code>
     *
     * <pre>
     * FIXME: change to int then put a lookup table
     * </pre>
     */
    public com.google.protobuf.ByteString
        getAtomTypeStrBytes() {
      java.lang.Object ref = atomTypeStr_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        atomTypeStr_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      atomtype_ = org.opencog.atomspace.AtomSpaceProtos.ZMQAtomType.ZMQAtomTypeNode;
      attentionvalueholder_ = org.opencog.atomspace.AtomSpaceProtos.ZMQAttentionValueHolderMessage.getDefaultInstance();
      handle_ = 0L;
      incoming_ = java.util.Collections.emptyList();
      type_ = 0;
      flags_ = 0;
      truthValue_ = org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueMessage.getDefaultInstance();
      name_ = "";
      outgoing_ = java.util.Collections.emptyList();
      trail_ = org.opencog.atomspace.AtomSpaceProtos.ZMQTrailMessage.getDefaultInstance();
      atomTypeStr_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasAtomtype()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAttentionvalueholder()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHandle()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getAttentionvalueholder().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasTruthValue()) {
        if (!getTruthValue().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTrail()) {
        if (!getTrail().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, atomtype_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, attentionvalueholder_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt64(3, handle_);
      }
      for (int i = 0; i < incoming_.size(); i++) {
        output.writeUInt64(4, incoming_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(5, type_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(6, flags_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(7, truthValue_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(8, getNameBytes());
      }
      for (int i = 0; i < outgoing_.size(); i++) {
        output.writeUInt64(9, outgoing_.get(i));
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(10, trail_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBytes(11, getAtomTypeStrBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, atomtype_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, attentionvalueholder_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, handle_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < incoming_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt64SizeNoTag(incoming_.get(i));
        }
        size += dataSize;
        size += 1 * getIncomingList().size();
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, type_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, flags_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, truthValue_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, getNameBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < outgoing_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt64SizeNoTag(outgoing_.get(i));
        }
        size += dataSize;
        size += 1 * getOutgoingList().size();
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, trail_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(11, getAtomTypeStrBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ZMQAtomMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencog.atomspace.AtomSpaceProtos.internal_static_ZMQAtomMessage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencog.atomspace.AtomSpaceProtos.internal_static_ZMQAtomMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage.class, org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage.Builder.class);
      }

      // Construct using org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getAttentionvalueholderFieldBuilder();
          getTruthValueFieldBuilder();
          getTrailFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        atomtype_ = org.opencog.atomspace.AtomSpaceProtos.ZMQAtomType.ZMQAtomTypeNode;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (attentionvalueholderBuilder_ == null) {
          attentionvalueholder_ = org.opencog.atomspace.AtomSpaceProtos.ZMQAttentionValueHolderMessage.getDefaultInstance();
        } else {
          attentionvalueholderBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        handle_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        incoming_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        flags_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        if (truthValueBuilder_ == null) {
          truthValue_ = org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueMessage.getDefaultInstance();
        } else {
          truthValueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        outgoing_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        if (trailBuilder_ == null) {
          trail_ = org.opencog.atomspace.AtomSpaceProtos.ZMQTrailMessage.getDefaultInstance();
        } else {
          trailBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        atomTypeStr_ = "";
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencog.atomspace.AtomSpaceProtos.internal_static_ZMQAtomMessage_descriptor;
      }

      public org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage getDefaultInstanceForType() {
        return org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage.getDefaultInstance();
      }

      public org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage build() {
        org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage buildPartial() {
        org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage result = new org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.atomtype_ = atomtype_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (attentionvalueholderBuilder_ == null) {
          result.attentionvalueholder_ = attentionvalueholder_;
        } else {
          result.attentionvalueholder_ = attentionvalueholderBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.handle_ = handle_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          incoming_ = java.util.Collections.unmodifiableList(incoming_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.incoming_ = incoming_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.flags_ = flags_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        if (truthValueBuilder_ == null) {
          result.truthValue_ = truthValue_;
        } else {
          result.truthValue_ = truthValueBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.name_ = name_;
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          outgoing_ = java.util.Collections.unmodifiableList(outgoing_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.outgoing_ = outgoing_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000080;
        }
        if (trailBuilder_ == null) {
          result.trail_ = trail_;
        } else {
          result.trail_ = trailBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000100;
        }
        result.atomTypeStr_ = atomTypeStr_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage) {
          return mergeFrom((org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage other) {
        if (other == org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage.getDefaultInstance()) return this;
        if (other.hasAtomtype()) {
          setAtomtype(other.getAtomtype());
        }
        if (other.hasAttentionvalueholder()) {
          mergeAttentionvalueholder(other.getAttentionvalueholder());
        }
        if (other.hasHandle()) {
          setHandle(other.getHandle());
        }
        if (!other.incoming_.isEmpty()) {
          if (incoming_.isEmpty()) {
            incoming_ = other.incoming_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureIncomingIsMutable();
            incoming_.addAll(other.incoming_);
          }
          onChanged();
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasFlags()) {
          setFlags(other.getFlags());
        }
        if (other.hasTruthValue()) {
          mergeTruthValue(other.getTruthValue());
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000080;
          name_ = other.name_;
          onChanged();
        }
        if (!other.outgoing_.isEmpty()) {
          if (outgoing_.isEmpty()) {
            outgoing_ = other.outgoing_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureOutgoingIsMutable();
            outgoing_.addAll(other.outgoing_);
          }
          onChanged();
        }
        if (other.hasTrail()) {
          mergeTrail(other.getTrail());
        }
        if (other.hasAtomTypeStr()) {
          bitField0_ |= 0x00000400;
          atomTypeStr_ = other.atomTypeStr_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasAtomtype()) {
          
          return false;
        }
        if (!hasAttentionvalueholder()) {
          
          return false;
        }
        if (!hasHandle()) {
          
          return false;
        }
        if (!hasType()) {
          
          return false;
        }
        if (!getAttentionvalueholder().isInitialized()) {
          
          return false;
        }
        if (hasTruthValue()) {
          if (!getTruthValue().isInitialized()) {
            
            return false;
          }
        }
        if (hasTrail()) {
          if (!getTrail().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .ZMQAtomType atomtype = 1;
      private org.opencog.atomspace.AtomSpaceProtos.ZMQAtomType atomtype_ = org.opencog.atomspace.AtomSpaceProtos.ZMQAtomType.ZMQAtomTypeNode;
      /**
       * <code>required .ZMQAtomType atomtype = 1;</code>
       */
      public boolean hasAtomtype() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .ZMQAtomType atomtype = 1;</code>
       */
      public org.opencog.atomspace.AtomSpaceProtos.ZMQAtomType getAtomtype() {
        return atomtype_;
      }
      /**
       * <code>required .ZMQAtomType atomtype = 1;</code>
       */
      public Builder setAtomtype(org.opencog.atomspace.AtomSpaceProtos.ZMQAtomType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        atomtype_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .ZMQAtomType atomtype = 1;</code>
       */
      public Builder clearAtomtype() {
        bitField0_ = (bitField0_ & ~0x00000001);
        atomtype_ = org.opencog.atomspace.AtomSpaceProtos.ZMQAtomType.ZMQAtomTypeNode;
        onChanged();
        return this;
      }

      // required .ZMQAttentionValueHolderMessage attentionvalueholder = 2;
      private org.opencog.atomspace.AtomSpaceProtos.ZMQAttentionValueHolderMessage attentionvalueholder_ = org.opencog.atomspace.AtomSpaceProtos.ZMQAttentionValueHolderMessage.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.opencog.atomspace.AtomSpaceProtos.ZMQAttentionValueHolderMessage, org.opencog.atomspace.AtomSpaceProtos.ZMQAttentionValueHolderMessage.Builder, org.opencog.atomspace.AtomSpaceProtos.ZMQAttentionValueHolderMessageOrBuilder> attentionvalueholderBuilder_;
      /**
       * <code>required .ZMQAttentionValueHolderMessage attentionvalueholder = 2;</code>
       */
      public boolean hasAttentionvalueholder() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .ZMQAttentionValueHolderMessage attentionvalueholder = 2;</code>
       */
      public org.opencog.atomspace.AtomSpaceProtos.ZMQAttentionValueHolderMessage getAttentionvalueholder() {
        if (attentionvalueholderBuilder_ == null) {
          return attentionvalueholder_;
        } else {
          return attentionvalueholderBuilder_.getMessage();
        }
      }
      /**
       * <code>required .ZMQAttentionValueHolderMessage attentionvalueholder = 2;</code>
       */
      public Builder setAttentionvalueholder(org.opencog.atomspace.AtomSpaceProtos.ZMQAttentionValueHolderMessage value) {
        if (attentionvalueholderBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          attentionvalueholder_ = value;
          onChanged();
        } else {
          attentionvalueholderBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .ZMQAttentionValueHolderMessage attentionvalueholder = 2;</code>
       */
      public Builder setAttentionvalueholder(
          org.opencog.atomspace.AtomSpaceProtos.ZMQAttentionValueHolderMessage.Builder builderForValue) {
        if (attentionvalueholderBuilder_ == null) {
          attentionvalueholder_ = builderForValue.build();
          onChanged();
        } else {
          attentionvalueholderBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .ZMQAttentionValueHolderMessage attentionvalueholder = 2;</code>
       */
      public Builder mergeAttentionvalueholder(org.opencog.atomspace.AtomSpaceProtos.ZMQAttentionValueHolderMessage value) {
        if (attentionvalueholderBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              attentionvalueholder_ != org.opencog.atomspace.AtomSpaceProtos.ZMQAttentionValueHolderMessage.getDefaultInstance()) {
            attentionvalueholder_ =
              org.opencog.atomspace.AtomSpaceProtos.ZMQAttentionValueHolderMessage.newBuilder(attentionvalueholder_).mergeFrom(value).buildPartial();
          } else {
            attentionvalueholder_ = value;
          }
          onChanged();
        } else {
          attentionvalueholderBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .ZMQAttentionValueHolderMessage attentionvalueholder = 2;</code>
       */
      public Builder clearAttentionvalueholder() {
        if (attentionvalueholderBuilder_ == null) {
          attentionvalueholder_ = org.opencog.atomspace.AtomSpaceProtos.ZMQAttentionValueHolderMessage.getDefaultInstance();
          onChanged();
        } else {
          attentionvalueholderBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>required .ZMQAttentionValueHolderMessage attentionvalueholder = 2;</code>
       */
      public org.opencog.atomspace.AtomSpaceProtos.ZMQAttentionValueHolderMessage.Builder getAttentionvalueholderBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getAttentionvalueholderFieldBuilder().getBuilder();
      }
      /**
       * <code>required .ZMQAttentionValueHolderMessage attentionvalueholder = 2;</code>
       */
      public org.opencog.atomspace.AtomSpaceProtos.ZMQAttentionValueHolderMessageOrBuilder getAttentionvalueholderOrBuilder() {
        if (attentionvalueholderBuilder_ != null) {
          return attentionvalueholderBuilder_.getMessageOrBuilder();
        } else {
          return attentionvalueholder_;
        }
      }
      /**
       * <code>required .ZMQAttentionValueHolderMessage attentionvalueholder = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.opencog.atomspace.AtomSpaceProtos.ZMQAttentionValueHolderMessage, org.opencog.atomspace.AtomSpaceProtos.ZMQAttentionValueHolderMessage.Builder, org.opencog.atomspace.AtomSpaceProtos.ZMQAttentionValueHolderMessageOrBuilder> 
          getAttentionvalueholderFieldBuilder() {
        if (attentionvalueholderBuilder_ == null) {
          attentionvalueholderBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.opencog.atomspace.AtomSpaceProtos.ZMQAttentionValueHolderMessage, org.opencog.atomspace.AtomSpaceProtos.ZMQAttentionValueHolderMessage.Builder, org.opencog.atomspace.AtomSpaceProtos.ZMQAttentionValueHolderMessageOrBuilder>(
                  attentionvalueholder_,
                  getParentForChildren(),
                  isClean());
          attentionvalueholder_ = null;
        }
        return attentionvalueholderBuilder_;
      }

      // required uint64 handle = 3;
      private long handle_ ;
      /**
       * <code>required uint64 handle = 3;</code>
       */
      public boolean hasHandle() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint64 handle = 3;</code>
       */
      public long getHandle() {
        return handle_;
      }
      /**
       * <code>required uint64 handle = 3;</code>
       */
      public Builder setHandle(long value) {
        bitField0_ |= 0x00000004;
        handle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 handle = 3;</code>
       */
      public Builder clearHandle() {
        bitField0_ = (bitField0_ & ~0x00000004);
        handle_ = 0L;
        onChanged();
        return this;
      }

      // repeated uint64 incoming = 4;
      private java.util.List<java.lang.Long> incoming_ = java.util.Collections.emptyList();
      private void ensureIncomingIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          incoming_ = new java.util.ArrayList<java.lang.Long>(incoming_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated uint64 incoming = 4;</code>
       */
      public java.util.List<java.lang.Long>
          getIncomingList() {
        return java.util.Collections.unmodifiableList(incoming_);
      }
      /**
       * <code>repeated uint64 incoming = 4;</code>
       */
      public int getIncomingCount() {
        return incoming_.size();
      }
      /**
       * <code>repeated uint64 incoming = 4;</code>
       */
      public long getIncoming(int index) {
        return incoming_.get(index);
      }
      /**
       * <code>repeated uint64 incoming = 4;</code>
       */
      public Builder setIncoming(
          int index, long value) {
        ensureIncomingIsMutable();
        incoming_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 incoming = 4;</code>
       */
      public Builder addIncoming(long value) {
        ensureIncomingIsMutable();
        incoming_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 incoming = 4;</code>
       */
      public Builder addAllIncoming(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureIncomingIsMutable();
        super.addAll(values, incoming_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 incoming = 4;</code>
       */
      public Builder clearIncoming() {
        incoming_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // required int32 type = 5;
      private int type_ ;
      /**
       * <code>required int32 type = 5;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 type = 5;</code>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>required int32 type = 5;</code>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000010;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 type = 5;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000010);
        type_ = 0;
        onChanged();
        return this;
      }

      // optional int32 flags = 6;
      private int flags_ ;
      /**
       * <code>optional int32 flags = 6;</code>
       */
      public boolean hasFlags() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 flags = 6;</code>
       */
      public int getFlags() {
        return flags_;
      }
      /**
       * <code>optional int32 flags = 6;</code>
       */
      public Builder setFlags(int value) {
        bitField0_ |= 0x00000020;
        flags_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 flags = 6;</code>
       */
      public Builder clearFlags() {
        bitField0_ = (bitField0_ & ~0x00000020);
        flags_ = 0;
        onChanged();
        return this;
      }

      // optional .ZMQTruthValueMessage truthValue = 7;
      private org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueMessage truthValue_ = org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueMessage.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueMessage, org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueMessage.Builder, org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueMessageOrBuilder> truthValueBuilder_;
      /**
       * <code>optional .ZMQTruthValueMessage truthValue = 7;</code>
       */
      public boolean hasTruthValue() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .ZMQTruthValueMessage truthValue = 7;</code>
       */
      public org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueMessage getTruthValue() {
        if (truthValueBuilder_ == null) {
          return truthValue_;
        } else {
          return truthValueBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .ZMQTruthValueMessage truthValue = 7;</code>
       */
      public Builder setTruthValue(org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueMessage value) {
        if (truthValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          truthValue_ = value;
          onChanged();
        } else {
          truthValueBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .ZMQTruthValueMessage truthValue = 7;</code>
       */
      public Builder setTruthValue(
          org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueMessage.Builder builderForValue) {
        if (truthValueBuilder_ == null) {
          truthValue_ = builderForValue.build();
          onChanged();
        } else {
          truthValueBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .ZMQTruthValueMessage truthValue = 7;</code>
       */
      public Builder mergeTruthValue(org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueMessage value) {
        if (truthValueBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              truthValue_ != org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueMessage.getDefaultInstance()) {
            truthValue_ =
              org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueMessage.newBuilder(truthValue_).mergeFrom(value).buildPartial();
          } else {
            truthValue_ = value;
          }
          onChanged();
        } else {
          truthValueBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .ZMQTruthValueMessage truthValue = 7;</code>
       */
      public Builder clearTruthValue() {
        if (truthValueBuilder_ == null) {
          truthValue_ = org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueMessage.getDefaultInstance();
          onChanged();
        } else {
          truthValueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      /**
       * <code>optional .ZMQTruthValueMessage truthValue = 7;</code>
       */
      public org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueMessage.Builder getTruthValueBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getTruthValueFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .ZMQTruthValueMessage truthValue = 7;</code>
       */
      public org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueMessageOrBuilder getTruthValueOrBuilder() {
        if (truthValueBuilder_ != null) {
          return truthValueBuilder_.getMessageOrBuilder();
        } else {
          return truthValue_;
        }
      }
      /**
       * <code>optional .ZMQTruthValueMessage truthValue = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueMessage, org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueMessage.Builder, org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueMessageOrBuilder> 
          getTruthValueFieldBuilder() {
        if (truthValueBuilder_ == null) {
          truthValueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueMessage, org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueMessage.Builder, org.opencog.atomspace.AtomSpaceProtos.ZMQTruthValueMessageOrBuilder>(
                  truthValue_,
                  getParentForChildren(),
                  isClean());
          truthValue_ = null;
        }
        return truthValueBuilder_;
      }

      // optional string name = 8;
      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 8;</code>
       *
       * <pre>
       *node
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional string name = 8;</code>
       *
       * <pre>
       *node
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 8;</code>
       *
       * <pre>
       *node
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 8;</code>
       *
       * <pre>
       *node
       * </pre>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 8;</code>
       *
       * <pre>
       *node
       * </pre>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000080);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 8;</code>
       *
       * <pre>
       *node
       * </pre>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        name_ = value;
        onChanged();
        return this;
      }

      // repeated uint64 outgoing = 9;
      private java.util.List<java.lang.Long> outgoing_ = java.util.Collections.emptyList();
      private void ensureOutgoingIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          outgoing_ = new java.util.ArrayList<java.lang.Long>(outgoing_);
          bitField0_ |= 0x00000100;
         }
      }
      /**
       * <code>repeated uint64 outgoing = 9;</code>
       *
       * <pre>
       *link
       * </pre>
       */
      public java.util.List<java.lang.Long>
          getOutgoingList() {
        return java.util.Collections.unmodifiableList(outgoing_);
      }
      /**
       * <code>repeated uint64 outgoing = 9;</code>
       *
       * <pre>
       *link
       * </pre>
       */
      public int getOutgoingCount() {
        return outgoing_.size();
      }
      /**
       * <code>repeated uint64 outgoing = 9;</code>
       *
       * <pre>
       *link
       * </pre>
       */
      public long getOutgoing(int index) {
        return outgoing_.get(index);
      }
      /**
       * <code>repeated uint64 outgoing = 9;</code>
       *
       * <pre>
       *link
       * </pre>
       */
      public Builder setOutgoing(
          int index, long value) {
        ensureOutgoingIsMutable();
        outgoing_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 outgoing = 9;</code>
       *
       * <pre>
       *link
       * </pre>
       */
      public Builder addOutgoing(long value) {
        ensureOutgoingIsMutable();
        outgoing_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 outgoing = 9;</code>
       *
       * <pre>
       *link
       * </pre>
       */
      public Builder addAllOutgoing(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureOutgoingIsMutable();
        super.addAll(values, outgoing_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 outgoing = 9;</code>
       *
       * <pre>
       *link
       * </pre>
       */
      public Builder clearOutgoing() {
        outgoing_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }

      // optional .ZMQTrailMessage trail = 10;
      private org.opencog.atomspace.AtomSpaceProtos.ZMQTrailMessage trail_ = org.opencog.atomspace.AtomSpaceProtos.ZMQTrailMessage.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.opencog.atomspace.AtomSpaceProtos.ZMQTrailMessage, org.opencog.atomspace.AtomSpaceProtos.ZMQTrailMessage.Builder, org.opencog.atomspace.AtomSpaceProtos.ZMQTrailMessageOrBuilder> trailBuilder_;
      /**
       * <code>optional .ZMQTrailMessage trail = 10;</code>
       *
       * <pre>
       *link
       * </pre>
       */
      public boolean hasTrail() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional .ZMQTrailMessage trail = 10;</code>
       *
       * <pre>
       *link
       * </pre>
       */
      public org.opencog.atomspace.AtomSpaceProtos.ZMQTrailMessage getTrail() {
        if (trailBuilder_ == null) {
          return trail_;
        } else {
          return trailBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .ZMQTrailMessage trail = 10;</code>
       *
       * <pre>
       *link
       * </pre>
       */
      public Builder setTrail(org.opencog.atomspace.AtomSpaceProtos.ZMQTrailMessage value) {
        if (trailBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          trail_ = value;
          onChanged();
        } else {
          trailBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .ZMQTrailMessage trail = 10;</code>
       *
       * <pre>
       *link
       * </pre>
       */
      public Builder setTrail(
          org.opencog.atomspace.AtomSpaceProtos.ZMQTrailMessage.Builder builderForValue) {
        if (trailBuilder_ == null) {
          trail_ = builderForValue.build();
          onChanged();
        } else {
          trailBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .ZMQTrailMessage trail = 10;</code>
       *
       * <pre>
       *link
       * </pre>
       */
      public Builder mergeTrail(org.opencog.atomspace.AtomSpaceProtos.ZMQTrailMessage value) {
        if (trailBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200) &&
              trail_ != org.opencog.atomspace.AtomSpaceProtos.ZMQTrailMessage.getDefaultInstance()) {
            trail_ =
              org.opencog.atomspace.AtomSpaceProtos.ZMQTrailMessage.newBuilder(trail_).mergeFrom(value).buildPartial();
          } else {
            trail_ = value;
          }
          onChanged();
        } else {
          trailBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .ZMQTrailMessage trail = 10;</code>
       *
       * <pre>
       *link
       * </pre>
       */
      public Builder clearTrail() {
        if (trailBuilder_ == null) {
          trail_ = org.opencog.atomspace.AtomSpaceProtos.ZMQTrailMessage.getDefaultInstance();
          onChanged();
        } else {
          trailBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }
      /**
       * <code>optional .ZMQTrailMessage trail = 10;</code>
       *
       * <pre>
       *link
       * </pre>
       */
      public org.opencog.atomspace.AtomSpaceProtos.ZMQTrailMessage.Builder getTrailBuilder() {
        bitField0_ |= 0x00000200;
        onChanged();
        return getTrailFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .ZMQTrailMessage trail = 10;</code>
       *
       * <pre>
       *link
       * </pre>
       */
      public org.opencog.atomspace.AtomSpaceProtos.ZMQTrailMessageOrBuilder getTrailOrBuilder() {
        if (trailBuilder_ != null) {
          return trailBuilder_.getMessageOrBuilder();
        } else {
          return trail_;
        }
      }
      /**
       * <code>optional .ZMQTrailMessage trail = 10;</code>
       *
       * <pre>
       *link
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.opencog.atomspace.AtomSpaceProtos.ZMQTrailMessage, org.opencog.atomspace.AtomSpaceProtos.ZMQTrailMessage.Builder, org.opencog.atomspace.AtomSpaceProtos.ZMQTrailMessageOrBuilder> 
          getTrailFieldBuilder() {
        if (trailBuilder_ == null) {
          trailBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.opencog.atomspace.AtomSpaceProtos.ZMQTrailMessage, org.opencog.atomspace.AtomSpaceProtos.ZMQTrailMessage.Builder, org.opencog.atomspace.AtomSpaceProtos.ZMQTrailMessageOrBuilder>(
                  trail_,
                  getParentForChildren(),
                  isClean());
          trail_ = null;
        }
        return trailBuilder_;
      }

      // optional string atom_type_str = 11;
      private java.lang.Object atomTypeStr_ = "";
      /**
       * <code>optional string atom_type_str = 11;</code>
       *
       * <pre>
       * FIXME: change to int then put a lookup table
       * </pre>
       */
      public boolean hasAtomTypeStr() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional string atom_type_str = 11;</code>
       *
       * <pre>
       * FIXME: change to int then put a lookup table
       * </pre>
       */
      public java.lang.String getAtomTypeStr() {
        java.lang.Object ref = atomTypeStr_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          atomTypeStr_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string atom_type_str = 11;</code>
       *
       * <pre>
       * FIXME: change to int then put a lookup table
       * </pre>
       */
      public com.google.protobuf.ByteString
          getAtomTypeStrBytes() {
        java.lang.Object ref = atomTypeStr_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          atomTypeStr_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string atom_type_str = 11;</code>
       *
       * <pre>
       * FIXME: change to int then put a lookup table
       * </pre>
       */
      public Builder setAtomTypeStr(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        atomTypeStr_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string atom_type_str = 11;</code>
       *
       * <pre>
       * FIXME: change to int then put a lookup table
       * </pre>
       */
      public Builder clearAtomTypeStr() {
        bitField0_ = (bitField0_ & ~0x00000400);
        atomTypeStr_ = getDefaultInstance().getAtomTypeStr();
        onChanged();
        return this;
      }
      /**
       * <code>optional string atom_type_str = 11;</code>
       *
       * <pre>
       * FIXME: change to int then put a lookup table
       * </pre>
       */
      public Builder setAtomTypeStrBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        atomTypeStr_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ZMQAtomMessage)
    }

    static {
      defaultInstance = new ZMQAtomMessage(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ZMQAtomMessage)
  }

  public interface ZMQAtomRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .ZMQAtomRequestKind kind = 1;
    /**
     * <code>required .ZMQAtomRequestKind kind = 1;</code>
     */
    boolean hasKind();
    /**
     * <code>required .ZMQAtomRequestKind kind = 1;</code>
     */
    ZMQAtomFetchKind getKind();

    // optional uint64 handle = 2;
    /**
     * <code>optional uint64 handle = 2;</code>
     */
    boolean hasHandle();
    /**
     * <code>optional uint64 handle = 2;</code>
     */
    long getHandle();

    // optional string atom_type = 3;
    /**
     * <code>optional string atom_type = 3;</code>
     *
     * <pre>
     * FIXME: change to int then put a lookup table
     * </pre>
     */
    boolean hasAtomType();
    /**
     * <code>optional string atom_type = 3;</code>
     *
     * <pre>
     * FIXME: change to int then put a lookup table
     * </pre>
     */
    java.lang.String getAtomType();
    /**
     * <code>optional string atom_type = 3;</code>
     *
     * <pre>
     * FIXME: change to int then put a lookup table
     * </pre>
     */
    com.google.protobuf.ByteString
        getAtomTypeBytes();

    // optional string node_name = 4;
    /**
     * <code>optional string node_name = 4;</code>
     */
    boolean hasNodeName();
    /**
     * <code>optional string node_name = 4;</code>
     */
    java.lang.String getName();
    /**
     * <code>optional string node_name = 4;</code>
     */
    com.google.protobuf.ByteString
        getNodeNameBytes();

    // repeated uint64 handle_seq = 5;
    /**
     * <code>repeated uint64 handle_seq = 5;</code>
     */
    java.util.List<java.lang.Long> getOutgoingList();
    /**
     * <code>repeated uint64 handle_seq = 5;</code>
     */
    int getHandleSeqCount();
    /**
     * <code>repeated uint64 handle_seq = 5;</code>
     */
    long getHandleSeq(int index);
  }
  /**
   * Protobuf type {@code ZMQAtomRequest}
   */
  public static final class ZMQAtomFetch extends
      com.google.protobuf.GeneratedMessage
      implements ZMQAtomRequestOrBuilder {
    // Use ZMQAtomRequest.newBuilder() to construct.
    private ZMQAtomFetch(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ZMQAtomFetch(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ZMQAtomFetch defaultInstance;
    public static ZMQAtomFetch getDefaultInstance() {
      return defaultInstance;
    }

    public ZMQAtomFetch getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ZMQAtomFetch(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              ZMQAtomFetchKind value = ZMQAtomFetchKind.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                kind_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              handle_ = input.readUInt64();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              atomType_ = input.readBytes();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              nodeName_ = input.readBytes();
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                handleSeq_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000010;
              }
              handleSeq_.add(input.readUInt64());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                handleSeq_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                handleSeq_.add(input.readUInt64());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          handleSeq_ = java.util.Collections.unmodifiableList(handleSeq_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencog.atomspace.AtomSpaceProtos.internal_static_ZMQAtomRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencog.atomspace.AtomSpaceProtos.internal_static_ZMQAtomRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ZMQAtomFetch.class, ZMQAtomFetch.Builder.class);
    }

    public static com.google.protobuf.Parser<ZMQAtomFetch> PARSER =
        new com.google.protobuf.AbstractParser<ZMQAtomFetch>() {
      public ZMQAtomFetch parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ZMQAtomFetch(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ZMQAtomFetch> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .ZMQAtomRequestKind kind = 1;
    public static final int KIND_FIELD_NUMBER = 1;
    private ZMQAtomFetchKind kind_;
    /**
     * <code>required .ZMQAtomRequestKind kind = 1;</code>
     */
    public boolean hasKind() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .ZMQAtomRequestKind kind = 1;</code>
     */
    public ZMQAtomFetchKind getKind() {
      return kind_;
    }

    // optional uint64 handle = 2;
    public static final int HANDLE_FIELD_NUMBER = 2;
    private long handle_;
    /**
     * <code>optional uint64 handle = 2;</code>
     */
    public boolean hasHandle() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint64 handle = 2;</code>
     */
    public long getHandle() {
      return handle_;
    }

    // optional string atom_type = 3;
    public static final int ATOM_TYPE_FIELD_NUMBER = 3;
    private java.lang.Object atomType_;
    /**
     * <code>optional string atom_type = 3;</code>
     *
     * <pre>
     * FIXME: change to int then put a lookup table
     * </pre>
     */
    public boolean hasAtomType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string atom_type = 3;</code>
     *
     * <pre>
     * FIXME: change to int then put a lookup table
     * </pre>
     */
    public java.lang.String getAtomType() {
      java.lang.Object ref = atomType_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          atomType_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string atom_type = 3;</code>
     *
     * <pre>
     * FIXME: change to int then put a lookup table
     * </pre>
     */
    public com.google.protobuf.ByteString
        getAtomTypeBytes() {
      java.lang.Object ref = atomType_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        atomType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string node_name = 4;
    public static final int NODE_NAME_FIELD_NUMBER = 4;
    private java.lang.Object nodeName_;
    /**
     * <code>optional string node_name = 4;</code>
     */
    public boolean hasNodeName() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string node_name = 4;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = nodeName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          nodeName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string node_name = 4;</code>
     */
    public com.google.protobuf.ByteString
        getNodeNameBytes() {
      java.lang.Object ref = nodeName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        nodeName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated uint64 handle_seq = 5;
    public static final int HANDLE_SEQ_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Long> handleSeq_;
    /**
     * <code>repeated uint64 handle_seq = 5;</code>
     */
    public java.util.List<java.lang.Long>
    getOutgoingList() {
      return handleSeq_;
    }
    /**
     * <code>repeated uint64 handle_seq = 5;</code>
     */
    public int getHandleSeqCount() {
      return handleSeq_.size();
    }
    /**
     * <code>repeated uint64 handle_seq = 5;</code>
     */
    public long getHandleSeq(int index) {
      return handleSeq_.get(index);
    }

    private void initFields() {
      kind_ = ZMQAtomFetchKind.UUID;
      handle_ = 0L;
      atomType_ = "";
      nodeName_ = "";
      handleSeq_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasKind()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, kind_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, handle_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getAtomTypeBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getNodeNameBytes());
      }
      for (int i = 0; i < handleSeq_.size(); i++) {
        output.writeUInt64(5, handleSeq_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, kind_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, handle_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getAtomTypeBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getNodeNameBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < handleSeq_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt64SizeNoTag(handleSeq_.get(i));
        }
        size += dataSize;
        size += 1 * getOutgoingList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static ZMQAtomFetch parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ZMQAtomFetch parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ZMQAtomFetch parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ZMQAtomFetch parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ZMQAtomFetch parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ZMQAtomFetch parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static ZMQAtomFetch parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static ZMQAtomFetch parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static ZMQAtomFetch parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ZMQAtomFetch parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(ZMQAtomFetch prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ZMQAtomRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.opencog.atomspace.AtomSpaceProtos.ZMQAtomRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencog.atomspace.AtomSpaceProtos.internal_static_ZMQAtomRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencog.atomspace.AtomSpaceProtos.internal_static_ZMQAtomRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ZMQAtomFetch.class, ZMQAtomFetch.Builder.class);
      }

      // Construct using org.opencog.atomspace.AtomSpaceProtos.ZMQAtomRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        kind_ = ZMQAtomFetchKind.UUID;
        bitField0_ = (bitField0_ & ~0x00000001);
        handle_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        atomType_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        nodeName_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        handleSeq_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencog.atomspace.AtomSpaceProtos.internal_static_ZMQAtomRequest_descriptor;
      }

      public ZMQAtomFetch getDefaultInstanceForType() {
        return ZMQAtomFetch.getDefaultInstance();
      }

      public ZMQAtomFetch build() {
        ZMQAtomFetch result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ZMQAtomFetch buildPartial() {
        ZMQAtomFetch result = new ZMQAtomFetch(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.kind_ = kind_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.handle_ = handle_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.atomType_ = atomType_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.nodeName_ = nodeName_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          handleSeq_ = java.util.Collections.unmodifiableList(handleSeq_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.handleSeq_ = handleSeq_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ZMQAtomFetch) {
          return mergeFrom((ZMQAtomFetch)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ZMQAtomFetch other) {
        if (other == ZMQAtomFetch.getDefaultInstance()) return this;
        if (other.hasKind()) {
          setKind(other.getKind());
        }
        if (other.hasHandle()) {
          setHandle(other.getHandle());
        }
        if (other.hasAtomType()) {
          bitField0_ |= 0x00000004;
          atomType_ = other.atomType_;
          onChanged();
        }
        if (other.hasNodeName()) {
          bitField0_ |= 0x00000008;
          nodeName_ = other.nodeName_;
          onChanged();
        }
        if (!other.handleSeq_.isEmpty()) {
          if (handleSeq_.isEmpty()) {
            handleSeq_ = other.handleSeq_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureHandleSeqIsMutable();
            handleSeq_.addAll(other.handleSeq_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasKind()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ZMQAtomFetch parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ZMQAtomFetch) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .ZMQAtomRequestKind kind = 1;
      private ZMQAtomFetchKind kind_ = ZMQAtomFetchKind.UUID;
      /**
       * <code>required .ZMQAtomRequestKind kind = 1;</code>
       */
      public boolean hasKind() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .ZMQAtomRequestKind kind = 1;</code>
       */
      public ZMQAtomFetchKind getKind() {
        return kind_;
      }
      /**
       * <code>required .ZMQAtomRequestKind kind = 1;</code>
       */
      public Builder setKind(ZMQAtomFetchKind value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        kind_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .ZMQAtomRequestKind kind = 1;</code>
       */
      public Builder clearKind() {
        bitField0_ = (bitField0_ & ~0x00000001);
        kind_ = ZMQAtomFetchKind.UUID;
        onChanged();
        return this;
      }

      // optional uint64 handle = 2;
      private long handle_ ;
      /**
       * <code>optional uint64 handle = 2;</code>
       */
      public boolean hasHandle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint64 handle = 2;</code>
       */
      public long getHandle() {
        return handle_;
      }
      /**
       * <code>optional uint64 handle = 2;</code>
       */
      public Builder setHandle(long value) {
        bitField0_ |= 0x00000002;
        handle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 handle = 2;</code>
       */
      public Builder clearHandle() {
        bitField0_ = (bitField0_ & ~0x00000002);
        handle_ = 0L;
        onChanged();
        return this;
      }

      // optional string atom_type = 3;
      private java.lang.Object atomType_ = "";
      /**
       * <code>optional string atom_type = 3;</code>
       *
       * <pre>
       * FIXME: change to int then put a lookup table
       * </pre>
       */
      public boolean hasAtomType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string atom_type = 3;</code>
       *
       * <pre>
       * FIXME: change to int then put a lookup table
       * </pre>
       */
      public java.lang.String getAtomType() {
        java.lang.Object ref = atomType_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          atomType_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string atom_type = 3;</code>
       *
       * <pre>
       * FIXME: change to int then put a lookup table
       * </pre>
       */
      public com.google.protobuf.ByteString
          getAtomTypeBytes() {
        java.lang.Object ref = atomType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          atomType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string atom_type = 3;</code>
       *
       * <pre>
       * FIXME: change to int then put a lookup table
       * </pre>
       */
      public Builder setAtomType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        atomType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string atom_type = 3;</code>
       *
       * <pre>
       * FIXME: change to int then put a lookup table
       * </pre>
       */
      public Builder clearAtomType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        atomType_ = getDefaultInstance().getAtomType();
        onChanged();
        return this;
      }
      /**
       * <code>optional string atom_type = 3;</code>
       *
       * <pre>
       * FIXME: change to int then put a lookup table
       * </pre>
       */
      public Builder setAtomTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        atomType_ = value;
        onChanged();
        return this;
      }

      // optional string node_name = 4;
      private java.lang.Object nodeName_ = "";
      /**
       * <code>optional string node_name = 4;</code>
       */
      public boolean hasNodeName() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string node_name = 4;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = nodeName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          nodeName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string node_name = 4;</code>
       */
      public com.google.protobuf.ByteString
          getNodeNameBytes() {
        java.lang.Object ref = nodeName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          nodeName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string node_name = 4;</code>
       */
      public Builder setName(
              java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        nodeName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string node_name = 4;</code>
       */
      public Builder clearNodeName() {
        bitField0_ = (bitField0_ & ~0x00000008);
        nodeName_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string node_name = 4;</code>
       */
      public Builder setNodeNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        nodeName_ = value;
        onChanged();
        return this;
      }

      // repeated uint64 handle_seq = 5;
      private java.util.List<java.lang.Long> handleSeq_ = java.util.Collections.emptyList();
      private void ensureHandleSeqIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          handleSeq_ = new java.util.ArrayList<java.lang.Long>(handleSeq_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated uint64 handle_seq = 5;</code>
       */
      public java.util.List<java.lang.Long>
      getOutgoingList() {
        return java.util.Collections.unmodifiableList(handleSeq_);
      }
      /**
       * <code>repeated uint64 handle_seq = 5;</code>
       */
      public int getHandleSeqCount() {
        return handleSeq_.size();
      }
      /**
       * <code>repeated uint64 handle_seq = 5;</code>
       */
      public long getHandleSeq(int index) {
        return handleSeq_.get(index);
      }
      /**
       * <code>repeated uint64 handle_seq = 5;</code>
       */
      public Builder setHandleSeq(
          int index, long value) {
        ensureHandleSeqIsMutable();
        handleSeq_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 handle_seq = 5;</code>
       */
      public Builder addOutgoing(long value) {
        ensureHandleSeqIsMutable();
        handleSeq_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 handle_seq = 5;</code>
       */
      public Builder addAllOutgoing(
              java.lang.Iterable<? extends java.lang.Long> values) {
        ensureHandleSeqIsMutable();
        super.addAll(values, handleSeq_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 handle_seq = 5;</code>
       */
      public Builder clearHandleSeq() {
        handleSeq_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ZMQAtomRequest)
    }

    static {
      defaultInstance = new ZMQAtomFetch(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ZMQAtomRequest)
  }

  public interface ZMQRequestMessageOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .ZMQFunctionType function = 1;
    /**
     * <code>required .ZMQFunctionType function = 1;</code>
     */
    boolean hasFunction();
    /**
     * <code>required .ZMQFunctionType function = 1;</code>
     */
    org.opencog.atomspace.AtomSpaceProtos.ZMQFunctionType getFunction();

    // optional uint64 handle = 2;
    /**
     * <code>optional uint64 handle = 2;</code>
     */
    boolean hasHandle();
    /**
     * <code>optional uint64 handle = 2;</code>
     */
    long getHandle();

    // repeated .ZMQAtomRequest requests = 3;
    /**
     * <code>repeated .ZMQAtomRequest requests = 3;</code>
     */
    java.util.List<ZMQAtomFetch>
        getRequestsList();
    /**
     * <code>repeated .ZMQAtomRequest requests = 3;</code>
     */
    ZMQAtomFetch getRequests(int index);
    /**
     * <code>repeated .ZMQAtomRequest requests = 3;</code>
     */
    int getRequestsCount();
    /**
     * <code>repeated .ZMQAtomRequest requests = 3;</code>
     */
    java.util.List<? extends org.opencog.atomspace.AtomSpaceProtos.ZMQAtomRequestOrBuilder> 
        getRequestsOrBuilderList();
    /**
     * <code>repeated .ZMQAtomRequest requests = 3;</code>
     */
    org.opencog.atomspace.AtomSpaceProtos.ZMQAtomRequestOrBuilder getRequestsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code ZMQRequestMessage}
   */
  public static final class ZMQRequestMessage extends
      com.google.protobuf.GeneratedMessage
      implements ZMQRequestMessageOrBuilder {
    // Use ZMQRequestMessage.newBuilder() to construct.
    private ZMQRequestMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ZMQRequestMessage(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ZMQRequestMessage defaultInstance;
    public static ZMQRequestMessage getDefaultInstance() {
      return defaultInstance;
    }

    public ZMQRequestMessage getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ZMQRequestMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              org.opencog.atomspace.AtomSpaceProtos.ZMQFunctionType value = org.opencog.atomspace.AtomSpaceProtos.ZMQFunctionType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                function_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              handle_ = input.readUInt64();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                requests_ = new java.util.ArrayList<ZMQAtomFetch>();
                mutable_bitField0_ |= 0x00000004;
              }
              requests_.add(input.readMessage(ZMQAtomFetch.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          requests_ = java.util.Collections.unmodifiableList(requests_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencog.atomspace.AtomSpaceProtos.internal_static_ZMQRequestMessage_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencog.atomspace.AtomSpaceProtos.internal_static_ZMQRequestMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencog.atomspace.AtomSpaceProtos.ZMQRequestMessage.class, org.opencog.atomspace.AtomSpaceProtos.ZMQRequestMessage.Builder.class);
    }

    public static com.google.protobuf.Parser<ZMQRequestMessage> PARSER =
        new com.google.protobuf.AbstractParser<ZMQRequestMessage>() {
      public ZMQRequestMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ZMQRequestMessage(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ZMQRequestMessage> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .ZMQFunctionType function = 1;
    public static final int FUNCTION_FIELD_NUMBER = 1;
    private org.opencog.atomspace.AtomSpaceProtos.ZMQFunctionType function_;
    /**
     * <code>required .ZMQFunctionType function = 1;</code>
     */
    public boolean hasFunction() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .ZMQFunctionType function = 1;</code>
     */
    public org.opencog.atomspace.AtomSpaceProtos.ZMQFunctionType getFunction() {
      return function_;
    }

    // optional uint64 handle = 2;
    public static final int HANDLE_FIELD_NUMBER = 2;
    private long handle_;
    /**
     * <code>optional uint64 handle = 2;</code>
     */
    public boolean hasHandle() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint64 handle = 2;</code>
     */
    public long getHandle() {
      return handle_;
    }

    // repeated .ZMQAtomRequest requests = 3;
    public static final int REQUESTS_FIELD_NUMBER = 3;
    private java.util.List<ZMQAtomFetch> requests_;
    /**
     * <code>repeated .ZMQAtomRequest requests = 3;</code>
     */
    public java.util.List<ZMQAtomFetch> getRequestsList() {
      return requests_;
    }
    /**
     * <code>repeated .ZMQAtomRequest requests = 3;</code>
     */
    public java.util.List<? extends org.opencog.atomspace.AtomSpaceProtos.ZMQAtomRequestOrBuilder> 
        getRequestsOrBuilderList() {
      return requests_;
    }
    /**
     * <code>repeated .ZMQAtomRequest requests = 3;</code>
     */
    public int getRequestsCount() {
      return requests_.size();
    }
    /**
     * <code>repeated .ZMQAtomRequest requests = 3;</code>
     */
    public ZMQAtomFetch getRequests(int index) {
      return requests_.get(index);
    }
    /**
     * <code>repeated .ZMQAtomRequest requests = 3;</code>
     */
    public org.opencog.atomspace.AtomSpaceProtos.ZMQAtomRequestOrBuilder getRequestsOrBuilder(
        int index) {
      return requests_.get(index);
    }

    private void initFields() {
      function_ = org.opencog.atomspace.AtomSpaceProtos.ZMQFunctionType.ZMQgetAtom;
      handle_ = 0L;
      requests_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasFunction()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getRequestsCount(); i++) {
        if (!getRequests(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, function_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, handle_);
      }
      for (int i = 0; i < requests_.size(); i++) {
        output.writeMessage(3, requests_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, function_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, handle_);
      }
      for (int i = 0; i < requests_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, requests_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.opencog.atomspace.AtomSpaceProtos.ZMQRequestMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQRequestMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQRequestMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQRequestMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQRequestMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQRequestMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQRequestMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQRequestMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQRequestMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQRequestMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.opencog.atomspace.AtomSpaceProtos.ZMQRequestMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ZMQRequestMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.opencog.atomspace.AtomSpaceProtos.ZMQRequestMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencog.atomspace.AtomSpaceProtos.internal_static_ZMQRequestMessage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencog.atomspace.AtomSpaceProtos.internal_static_ZMQRequestMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencog.atomspace.AtomSpaceProtos.ZMQRequestMessage.class, org.opencog.atomspace.AtomSpaceProtos.ZMQRequestMessage.Builder.class);
      }

      // Construct using org.opencog.atomspace.AtomSpaceProtos.ZMQRequestMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRequestsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        function_ = org.opencog.atomspace.AtomSpaceProtos.ZMQFunctionType.ZMQgetAtom;
        bitField0_ = (bitField0_ & ~0x00000001);
        handle_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (requestsBuilder_ == null) {
          requests_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          requestsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencog.atomspace.AtomSpaceProtos.internal_static_ZMQRequestMessage_descriptor;
      }

      public org.opencog.atomspace.AtomSpaceProtos.ZMQRequestMessage getDefaultInstanceForType() {
        return org.opencog.atomspace.AtomSpaceProtos.ZMQRequestMessage.getDefaultInstance();
      }

      public org.opencog.atomspace.AtomSpaceProtos.ZMQRequestMessage build() {
        org.opencog.atomspace.AtomSpaceProtos.ZMQRequestMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.opencog.atomspace.AtomSpaceProtos.ZMQRequestMessage buildPartial() {
        org.opencog.atomspace.AtomSpaceProtos.ZMQRequestMessage result = new org.opencog.atomspace.AtomSpaceProtos.ZMQRequestMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.function_ = function_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.handle_ = handle_;
        if (requestsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            requests_ = java.util.Collections.unmodifiableList(requests_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.requests_ = requests_;
        } else {
          result.requests_ = requestsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencog.atomspace.AtomSpaceProtos.ZMQRequestMessage) {
          return mergeFrom((org.opencog.atomspace.AtomSpaceProtos.ZMQRequestMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencog.atomspace.AtomSpaceProtos.ZMQRequestMessage other) {
        if (other == org.opencog.atomspace.AtomSpaceProtos.ZMQRequestMessage.getDefaultInstance()) return this;
        if (other.hasFunction()) {
          setFunction(other.getFunction());
        }
        if (other.hasHandle()) {
          setHandle(other.getHandle());
        }
        if (requestsBuilder_ == null) {
          if (!other.requests_.isEmpty()) {
            if (requests_.isEmpty()) {
              requests_ = other.requests_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureRequestsIsMutable();
              requests_.addAll(other.requests_);
            }
            onChanged();
          }
        } else {
          if (!other.requests_.isEmpty()) {
            if (requestsBuilder_.isEmpty()) {
              requestsBuilder_.dispose();
              requestsBuilder_ = null;
              requests_ = other.requests_;
              bitField0_ = (bitField0_ & ~0x00000004);
              requestsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRequestsFieldBuilder() : null;
            } else {
              requestsBuilder_.addAllMessages(other.requests_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasFunction()) {
          
          return false;
        }
        for (int i = 0; i < getRequestsCount(); i++) {
          if (!getRequests(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencog.atomspace.AtomSpaceProtos.ZMQRequestMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencog.atomspace.AtomSpaceProtos.ZMQRequestMessage) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .ZMQFunctionType function = 1;
      private org.opencog.atomspace.AtomSpaceProtos.ZMQFunctionType function_ = org.opencog.atomspace.AtomSpaceProtos.ZMQFunctionType.ZMQgetAtom;
      /**
       * <code>required .ZMQFunctionType function = 1;</code>
       */
      public boolean hasFunction() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .ZMQFunctionType function = 1;</code>
       */
      public org.opencog.atomspace.AtomSpaceProtos.ZMQFunctionType getFunction() {
        return function_;
      }
      /**
       * <code>required .ZMQFunctionType function = 1;</code>
       */
      public Builder setFunction(org.opencog.atomspace.AtomSpaceProtos.ZMQFunctionType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        function_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .ZMQFunctionType function = 1;</code>
       */
      public Builder clearFunction() {
        bitField0_ = (bitField0_ & ~0x00000001);
        function_ = org.opencog.atomspace.AtomSpaceProtos.ZMQFunctionType.ZMQgetAtom;
        onChanged();
        return this;
      }

      // optional uint64 handle = 2;
      private long handle_ ;
      /**
       * <code>optional uint64 handle = 2;</code>
       */
      public boolean hasHandle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint64 handle = 2;</code>
       */
      public long getHandle() {
        return handle_;
      }
      /**
       * <code>optional uint64 handle = 2;</code>
       */
      public Builder setHandle(long value) {
        bitField0_ |= 0x00000002;
        handle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 handle = 2;</code>
       */
      public Builder clearHandle() {
        bitField0_ = (bitField0_ & ~0x00000002);
        handle_ = 0L;
        onChanged();
        return this;
      }

      // repeated .ZMQAtomRequest requests = 3;
      private java.util.List<ZMQAtomFetch> requests_ =
        java.util.Collections.emptyList();
      private void ensureRequestsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          requests_ = new java.util.ArrayList<ZMQAtomFetch>(requests_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
              ZMQAtomFetch, ZMQAtomFetch.Builder, org.opencog.atomspace.AtomSpaceProtos.ZMQAtomRequestOrBuilder> requestsBuilder_;

      /**
       * <code>repeated .ZMQAtomRequest requests = 3;</code>
       */
      public java.util.List<ZMQAtomFetch> getRequestsList() {
        if (requestsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(requests_);
        } else {
          return requestsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .ZMQAtomRequest requests = 3;</code>
       */
      public int getRequestsCount() {
        if (requestsBuilder_ == null) {
          return requests_.size();
        } else {
          return requestsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .ZMQAtomRequest requests = 3;</code>
       */
      public ZMQAtomFetch getRequests(int index) {
        if (requestsBuilder_ == null) {
          return requests_.get(index);
        } else {
          return requestsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .ZMQAtomRequest requests = 3;</code>
       */
      public Builder setRequests(
          int index, ZMQAtomFetch value) {
        if (requestsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRequestsIsMutable();
          requests_.set(index, value);
          onChanged();
        } else {
          requestsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ZMQAtomRequest requests = 3;</code>
       */
      public Builder setRequests(
          int index, ZMQAtomFetch.Builder builderForValue) {
        if (requestsBuilder_ == null) {
          ensureRequestsIsMutable();
          requests_.set(index, builderForValue.build());
          onChanged();
        } else {
          requestsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ZMQAtomRequest requests = 3;</code>
       */
      public Builder addRequests(ZMQAtomFetch value) {
        if (requestsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRequestsIsMutable();
          requests_.add(value);
          onChanged();
        } else {
          requestsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .ZMQAtomRequest requests = 3;</code>
       */
      public Builder addRequests(
          int index, ZMQAtomFetch value) {
        if (requestsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRequestsIsMutable();
          requests_.add(index, value);
          onChanged();
        } else {
          requestsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ZMQAtomRequest requests = 3;</code>
       */
      public Builder addRequests(
          ZMQAtomFetch.Builder builderForValue) {
        if (requestsBuilder_ == null) {
          ensureRequestsIsMutable();
          requests_.add(builderForValue.build());
          onChanged();
        } else {
          requestsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ZMQAtomRequest requests = 3;</code>
       */
      public Builder addRequests(
          int index, ZMQAtomFetch.Builder builderForValue) {
        if (requestsBuilder_ == null) {
          ensureRequestsIsMutable();
          requests_.add(index, builderForValue.build());
          onChanged();
        } else {
          requestsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ZMQAtomRequest requests = 3;</code>
       */
      public Builder addAllRequests(
          java.lang.Iterable<? extends ZMQAtomFetch> values) {
        if (requestsBuilder_ == null) {
          ensureRequestsIsMutable();
          super.addAll(values, requests_);
          onChanged();
        } else {
          requestsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .ZMQAtomRequest requests = 3;</code>
       */
      public Builder clearRequests() {
        if (requestsBuilder_ == null) {
          requests_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          requestsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .ZMQAtomRequest requests = 3;</code>
       */
      public Builder removeRequests(int index) {
        if (requestsBuilder_ == null) {
          ensureRequestsIsMutable();
          requests_.remove(index);
          onChanged();
        } else {
          requestsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .ZMQAtomRequest requests = 3;</code>
       */
      public ZMQAtomFetch.Builder getRequestsBuilder(
          int index) {
        return getRequestsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .ZMQAtomRequest requests = 3;</code>
       */
      public org.opencog.atomspace.AtomSpaceProtos.ZMQAtomRequestOrBuilder getRequestsOrBuilder(
          int index) {
        if (requestsBuilder_ == null) {
          return requests_.get(index);  } else {
          return requestsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .ZMQAtomRequest requests = 3;</code>
       */
      public java.util.List<? extends org.opencog.atomspace.AtomSpaceProtos.ZMQAtomRequestOrBuilder> 
           getRequestsOrBuilderList() {
        if (requestsBuilder_ != null) {
          return requestsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(requests_);
        }
      }
      /**
       * <code>repeated .ZMQAtomRequest requests = 3;</code>
       */
      public ZMQAtomFetch.Builder addRequestsBuilder() {
        return getRequestsFieldBuilder().addBuilder(
            ZMQAtomFetch.getDefaultInstance());
      }
      /**
       * <code>repeated .ZMQAtomRequest requests = 3;</code>
       */
      public ZMQAtomFetch.Builder addRequestsBuilder(
          int index) {
        return getRequestsFieldBuilder().addBuilder(
            index, ZMQAtomFetch.getDefaultInstance());
      }
      /**
       * <code>repeated .ZMQAtomRequest requests = 3;</code>
       */
      public java.util.List<ZMQAtomFetch.Builder>
           getRequestsBuilderList() {
        return getRequestsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
              ZMQAtomFetch, ZMQAtomFetch.Builder, org.opencog.atomspace.AtomSpaceProtos.ZMQAtomRequestOrBuilder>
          getRequestsFieldBuilder() {
        if (requestsBuilder_ == null) {
          requestsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                  ZMQAtomFetch, ZMQAtomFetch.Builder, org.opencog.atomspace.AtomSpaceProtos.ZMQAtomRequestOrBuilder>(
                  requests_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          requests_ = null;
        }
        return requestsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:ZMQRequestMessage)
    }

    static {
      defaultInstance = new ZMQRequestMessage(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ZMQRequestMessage)
  }

  public interface ZMQReplyMessageOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .ZMQAtomMessage atom2 = 1;
    /**
     * <code>optional .ZMQAtomMessage atom2 = 1;</code>
     */
    boolean hasAtom2();
    /**
     * <code>optional .ZMQAtomMessage atom2 = 1;</code>
     */
    org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage getAtom2();
    /**
     * <code>optional .ZMQAtomMessage atom2 = 1;</code>
     */
    org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessageOrBuilder getAtom2OrBuilder();

    // optional string str = 2;
    /**
     * <code>optional string str = 2;</code>
     */
    boolean hasStr();
    /**
     * <code>optional string str = 2;</code>
     */
    java.lang.String getStr();
    /**
     * <code>optional string str = 2;</code>
     */
    com.google.protobuf.ByteString
        getStrBytes();

    // repeated .ZMQAtomMessage results = 3;
    /**
     * <code>repeated .ZMQAtomMessage results = 3;</code>
     *
     * <pre>
     * temporary, should merge with atom
     * </pre>
     */
    java.util.List<org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage>
    getAtomList();
    /**
     * <code>repeated .ZMQAtomMessage results = 3;</code>
     *
     * <pre>
     * temporary, should merge with atom
     * </pre>
     */
    org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage getResults(int index);
    /**
     * <code>repeated .ZMQAtomMessage results = 3;</code>
     *
     * <pre>
     * temporary, should merge with atom
     * </pre>
     */
    int getResultsCount();
    /**
     * <code>repeated .ZMQAtomMessage results = 3;</code>
     *
     * <pre>
     * temporary, should merge with atom
     * </pre>
     */
    java.util.List<? extends org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessageOrBuilder>
        getResultsOrBuilderList();
    /**
     * <code>repeated .ZMQAtomMessage results = 3;</code>
     *
     * <pre>
     * temporary, should merge with atom
     * </pre>
     */
    org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessageOrBuilder getResultsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code ZMQReplyMessage}
   */
  public static final class ZMQReplyMessage extends
      com.google.protobuf.GeneratedMessage
      implements ZMQReplyMessageOrBuilder {
    // Use ZMQReplyMessage.newBuilder() to construct.
    private ZMQReplyMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ZMQReplyMessage(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ZMQReplyMessage defaultInstance;
    public static ZMQReplyMessage getDefaultInstance() {
      return defaultInstance;
    }

    public ZMQReplyMessage getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ZMQReplyMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = atom2_.toBuilder();
              }
              atom2_ = input.readMessage(org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(atom2_);
                atom2_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              str_ = input.readBytes();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                results_ = new java.util.ArrayList<org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage>();
                mutable_bitField0_ |= 0x00000004;
              }
              results_.add(input.readMessage(org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          results_ = java.util.Collections.unmodifiableList(results_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencog.atomspace.AtomSpaceProtos.internal_static_ZMQReplyMessage_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencog.atomspace.AtomSpaceProtos.internal_static_ZMQReplyMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencog.atomspace.AtomSpaceProtos.ZMQReplyMessage.class, org.opencog.atomspace.AtomSpaceProtos.ZMQReplyMessage.Builder.class);
    }

    public static com.google.protobuf.Parser<ZMQReplyMessage> PARSER =
        new com.google.protobuf.AbstractParser<ZMQReplyMessage>() {
      public ZMQReplyMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ZMQReplyMessage(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ZMQReplyMessage> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .ZMQAtomMessage atom2 = 1;
    public static final int ATOM2_FIELD_NUMBER = 1;
    private org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage atom2_;
    /**
     * <code>optional .ZMQAtomMessage atom2 = 1;</code>
     */
    public boolean hasAtom2() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .ZMQAtomMessage atom2 = 1;</code>
     */
    public org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage getAtom2() {
      return atom2_;
    }
    /**
     * <code>optional .ZMQAtomMessage atom2 = 1;</code>
     */
    public org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessageOrBuilder getAtom2OrBuilder() {
      return atom2_;
    }

    // optional string str = 2;
    public static final int STR_FIELD_NUMBER = 2;
    private java.lang.Object str_;
    /**
     * <code>optional string str = 2;</code>
     */
    public boolean hasStr() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string str = 2;</code>
     */
    public java.lang.String getStr() {
      java.lang.Object ref = str_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          str_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string str = 2;</code>
     */
    public com.google.protobuf.ByteString
        getStrBytes() {
      java.lang.Object ref = str_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        str_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated .ZMQAtomMessage results = 3;
    public static final int RESULTS_FIELD_NUMBER = 3;
    private java.util.List<org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage> results_;
    /**
     * <code>repeated .ZMQAtomMessage results = 3;</code>
     *
     * <pre>
     * temporary, should merge with atom
     * </pre>
     */
    public java.util.List<org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage> getAtomList() {
      return results_;
    }
    /**
     * <code>repeated .ZMQAtomMessage results = 3;</code>
     *
     * <pre>
     * temporary, should merge with atom
     * </pre>
     */
    public java.util.List<? extends org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessageOrBuilder>
        getResultsOrBuilderList() {
      return results_;
    }
    /**
     * <code>repeated .ZMQAtomMessage results = 3;</code>
     *
     * <pre>
     * temporary, should merge with atom
     * </pre>
     */
    public int getResultsCount() {
      return results_.size();
    }
    /**
     * <code>repeated .ZMQAtomMessage results = 3;</code>
     *
     * <pre>
     * temporary, should merge with atom
     * </pre>
     */
    public org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage getResults(int index) {
      return results_.get(index);
    }
    /**
     * <code>repeated .ZMQAtomMessage results = 3;</code>
     *
     * <pre>
     * temporary, should merge with atom
     * </pre>
     */
    public org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessageOrBuilder getResultsOrBuilder(
        int index) {
      return results_.get(index);
    }

    private void initFields() {
      atom2_ = org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage.getDefaultInstance();
      str_ = "";
      results_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (hasAtom2()) {
        if (!getAtom2().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getResultsCount(); i++) {
        if (!getResults(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, atom2_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getStrBytes());
      }
      for (int i = 0; i < results_.size(); i++) {
        output.writeMessage(3, results_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, atom2_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getStrBytes());
      }
      for (int i = 0; i < results_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, results_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.opencog.atomspace.AtomSpaceProtos.ZMQReplyMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQReplyMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQReplyMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQReplyMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQReplyMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQReplyMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQReplyMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQReplyMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQReplyMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.opencog.atomspace.AtomSpaceProtos.ZMQReplyMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.opencog.atomspace.AtomSpaceProtos.ZMQReplyMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ZMQReplyMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.opencog.atomspace.AtomSpaceProtos.ZMQReplyMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencog.atomspace.AtomSpaceProtos.internal_static_ZMQReplyMessage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencog.atomspace.AtomSpaceProtos.internal_static_ZMQReplyMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencog.atomspace.AtomSpaceProtos.ZMQReplyMessage.class, org.opencog.atomspace.AtomSpaceProtos.ZMQReplyMessage.Builder.class);
      }

      // Construct using org.opencog.atomspace.AtomSpaceProtos.ZMQReplyMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getAtom2FieldBuilder();
          getResultsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (atom2Builder_ == null) {
          atom2_ = org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage.getDefaultInstance();
        } else {
          atom2Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        str_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        if (resultsBuilder_ == null) {
          results_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          resultsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencog.atomspace.AtomSpaceProtos.internal_static_ZMQReplyMessage_descriptor;
      }

      public org.opencog.atomspace.AtomSpaceProtos.ZMQReplyMessage getDefaultInstanceForType() {
        return org.opencog.atomspace.AtomSpaceProtos.ZMQReplyMessage.getDefaultInstance();
      }

      public org.opencog.atomspace.AtomSpaceProtos.ZMQReplyMessage build() {
        org.opencog.atomspace.AtomSpaceProtos.ZMQReplyMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.opencog.atomspace.AtomSpaceProtos.ZMQReplyMessage buildPartial() {
        org.opencog.atomspace.AtomSpaceProtos.ZMQReplyMessage result = new org.opencog.atomspace.AtomSpaceProtos.ZMQReplyMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (atom2Builder_ == null) {
          result.atom2_ = atom2_;
        } else {
          result.atom2_ = atom2Builder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.str_ = str_;
        if (resultsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            results_ = java.util.Collections.unmodifiableList(results_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.results_ = results_;
        } else {
          result.results_ = resultsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencog.atomspace.AtomSpaceProtos.ZMQReplyMessage) {
          return mergeFrom((org.opencog.atomspace.AtomSpaceProtos.ZMQReplyMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencog.atomspace.AtomSpaceProtos.ZMQReplyMessage other) {
        if (other == org.opencog.atomspace.AtomSpaceProtos.ZMQReplyMessage.getDefaultInstance()) return this;
        if (other.hasAtom2()) {
          mergeAtom2(other.getAtom2());
        }
        if (other.hasStr()) {
          bitField0_ |= 0x00000002;
          str_ = other.str_;
          onChanged();
        }
        if (resultsBuilder_ == null) {
          if (!other.results_.isEmpty()) {
            if (results_.isEmpty()) {
              results_ = other.results_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureResultsIsMutable();
              results_.addAll(other.results_);
            }
            onChanged();
          }
        } else {
          if (!other.results_.isEmpty()) {
            if (resultsBuilder_.isEmpty()) {
              resultsBuilder_.dispose();
              resultsBuilder_ = null;
              results_ = other.results_;
              bitField0_ = (bitField0_ & ~0x00000004);
              resultsBuilder_ =
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getResultsFieldBuilder() : null;
            } else {
              resultsBuilder_.addAllMessages(other.results_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (hasAtom2()) {
          if (!getAtom2().isInitialized()) {

            return false;
          }
        }
        for (int i = 0; i < getResultsCount(); i++) {
          if (!getResults(i).isInitialized()) {

            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencog.atomspace.AtomSpaceProtos.ZMQReplyMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencog.atomspace.AtomSpaceProtos.ZMQReplyMessage) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .ZMQAtomMessage atom2 = 1;
      private org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage atom2_ = org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage, org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage.Builder, org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessageOrBuilder> atom2Builder_;
      /**
       * <code>optional .ZMQAtomMessage atom2 = 1;</code>
       */
      public boolean hasAtom2() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .ZMQAtomMessage atom2 = 1;</code>
       */
      public org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage getAtom2() {
        if (atom2Builder_ == null) {
          return atom2_;
        } else {
          return atom2Builder_.getMessage();
        }
      }
      /**
       * <code>optional .ZMQAtomMessage atom2 = 1;</code>
       */
      public Builder setAtom2(org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage value) {
        if (atom2Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          atom2_ = value;
          onChanged();
        } else {
          atom2Builder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .ZMQAtomMessage atom2 = 1;</code>
       */
      public Builder setAtom2(
          org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage.Builder builderForValue) {
        if (atom2Builder_ == null) {
          atom2_ = builderForValue.build();
          onChanged();
        } else {
          atom2Builder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .ZMQAtomMessage atom2 = 1;</code>
       */
      public Builder mergeAtom2(org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage value) {
        if (atom2Builder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              atom2_ != org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage.getDefaultInstance()) {
            atom2_ =
              org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage.newBuilder(atom2_).mergeFrom(value).buildPartial();
          } else {
            atom2_ = value;
          }
          onChanged();
        } else {
          atom2Builder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .ZMQAtomMessage atom2 = 1;</code>
       */
      public Builder clearAtom2() {
        if (atom2Builder_ == null) {
          atom2_ = org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage.getDefaultInstance();
          onChanged();
        } else {
          atom2Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .ZMQAtomMessage atom2 = 1;</code>
       */
      public org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage.Builder getAtom2Builder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getAtom2FieldBuilder().getBuilder();
      }
      /**
       * <code>optional .ZMQAtomMessage atom2 = 1;</code>
       */
      public org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessageOrBuilder getAtom2OrBuilder() {
        if (atom2Builder_ != null) {
          return atom2Builder_.getMessageOrBuilder();
        } else {
          return atom2_;
        }
      }
      /**
       * <code>optional .ZMQAtomMessage atom2 = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage, org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage.Builder, org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessageOrBuilder>
          getAtom2FieldBuilder() {
        if (atom2Builder_ == null) {
          atom2Builder_ = new com.google.protobuf.SingleFieldBuilder<
              org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage, org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage.Builder, org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessageOrBuilder>(
                  atom2_,
                  getParentForChildren(),
                  isClean());
          atom2_ = null;
        }
        return atom2Builder_;
      }

      // optional string str = 2;
      private java.lang.Object str_ = "";
      /**
       * <code>optional string str = 2;</code>
       */
      public boolean hasStr() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string str = 2;</code>
       */
      public java.lang.String getStr() {
        java.lang.Object ref = str_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          str_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string str = 2;</code>
       */
      public com.google.protobuf.ByteString
          getStrBytes() {
        java.lang.Object ref = str_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          str_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string str = 2;</code>
       */
      public Builder setStr(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        str_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string str = 2;</code>
       */
      public Builder clearStr() {
        bitField0_ = (bitField0_ & ~0x00000002);
        str_ = getDefaultInstance().getStr();
        onChanged();
        return this;
      }
      /**
       * <code>optional string str = 2;</code>
       */
      public Builder setStrBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        str_ = value;
        onChanged();
        return this;
      }

      // repeated .ZMQAtomMessage results = 3;
      private java.util.List<org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage> results_ =
        java.util.Collections.emptyList();
      private void ensureResultsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          results_ = new java.util.ArrayList<org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage>(results_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage, org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage.Builder, org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessageOrBuilder> resultsBuilder_;

      /**
       * <code>repeated .ZMQAtomMessage results = 3;</code>
       *
       * <pre>
       * temporary, should merge with atom
       * </pre>
       */
      public java.util.List<org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage> getAtomList() {
        if (resultsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(results_);
        } else {
          return resultsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .ZMQAtomMessage results = 3;</code>
       *
       * <pre>
       * temporary, should merge with atom
       * </pre>
       */
      public int getResultsCount() {
        if (resultsBuilder_ == null) {
          return results_.size();
        } else {
          return resultsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .ZMQAtomMessage results = 3;</code>
       *
       * <pre>
       * temporary, should merge with atom
       * </pre>
       */
      public org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage getResults(int index) {
        if (resultsBuilder_ == null) {
          return results_.get(index);
        } else {
          return resultsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .ZMQAtomMessage results = 3;</code>
       *
       * <pre>
       * temporary, should merge with atom
       * </pre>
       */
      public Builder setResults(
          int index, org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage value) {
        if (resultsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureResultsIsMutable();
          results_.set(index, value);
          onChanged();
        } else {
          resultsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ZMQAtomMessage results = 3;</code>
       *
       * <pre>
       * temporary, should merge with atom
       * </pre>
       */
      public Builder setResults(
          int index, org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage.Builder builderForValue) {
        if (resultsBuilder_ == null) {
          ensureResultsIsMutable();
          results_.set(index, builderForValue.build());
          onChanged();
        } else {
          resultsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ZMQAtomMessage results = 3;</code>
       *
       * <pre>
       * temporary, should merge with atom
       * </pre>
       */
      public Builder addAtom(org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage value) {
        if (resultsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureResultsIsMutable();
          results_.add(value);
          onChanged();
        } else {
          resultsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .ZMQAtomMessage results = 3;</code>
       *
       * <pre>
       * temporary, should merge with atom
       * </pre>
       */
      public Builder addAtom(
              int index, org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage value) {
        if (resultsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureResultsIsMutable();
          results_.add(index, value);
          onChanged();
        } else {
          resultsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ZMQAtomMessage results = 3;</code>
       *
       * <pre>
       * temporary, should merge with atom
       * </pre>
       */
      public Builder addAtom(
              org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage.Builder builderForValue) {
        if (resultsBuilder_ == null) {
          ensureResultsIsMutable();
          results_.add(builderForValue.build());
          onChanged();
        } else {
          resultsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ZMQAtomMessage results = 3;</code>
       *
       * <pre>
       * temporary, should merge with atom
       * </pre>
       */
      public Builder addAtom(
              int index, org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage.Builder builderForValue) {
        if (resultsBuilder_ == null) {
          ensureResultsIsMutable();
          results_.add(index, builderForValue.build());
          onChanged();
        } else {
          resultsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ZMQAtomMessage results = 3;</code>
       *
       * <pre>
       * temporary, should merge with atom
       * </pre>
       */
      public Builder addAllAtoms(
              java.lang.Iterable<? extends org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage> values) {
        if (resultsBuilder_ == null) {
          ensureResultsIsMutable();
          super.addAll(values, results_);
          onChanged();
        } else {
          resultsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .ZMQAtomMessage results = 3;</code>
       *
       * <pre>
       * temporary, should merge with atom
       * </pre>
       */
      public Builder clearResults() {
        if (resultsBuilder_ == null) {
          results_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          resultsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .ZMQAtomMessage results = 3;</code>
       *
       * <pre>
       * temporary, should merge with atom
       * </pre>
       */
      public Builder removeResults(int index) {
        if (resultsBuilder_ == null) {
          ensureResultsIsMutable();
          results_.remove(index);
          onChanged();
        } else {
          resultsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .ZMQAtomMessage results = 3;</code>
       *
       * <pre>
       * temporary, should merge with atom
       * </pre>
       */
      public org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage.Builder getResultsBuilder(
          int index) {
        return getResultsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .ZMQAtomMessage results = 3;</code>
       *
       * <pre>
       * temporary, should merge with atom
       * </pre>
       */
      public org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessageOrBuilder getResultsOrBuilder(
          int index) {
        if (resultsBuilder_ == null) {
          return results_.get(index);  } else {
          return resultsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .ZMQAtomMessage results = 3;</code>
       *
       * <pre>
       * temporary, should merge with atom
       * </pre>
       */
      public java.util.List<? extends org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessageOrBuilder>
           getResultsOrBuilderList() {
        if (resultsBuilder_ != null) {
          return resultsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(results_);
        }
      }
      /**
       * <code>repeated .ZMQAtomMessage results = 3;</code>
       *
       * <pre>
       * temporary, should merge with atom
       * </pre>
       */
      public org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage.Builder addResultsBuilder() {
        return getResultsFieldBuilder().addBuilder(
            org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage.getDefaultInstance());
      }
      /**
       * <code>repeated .ZMQAtomMessage results = 3;</code>
       *
       * <pre>
       * temporary, should merge with atom
       * </pre>
       */
      public org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage.Builder addResultsBuilder(
          int index) {
        return getResultsFieldBuilder().addBuilder(
            index, org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage.getDefaultInstance());
      }
      /**
       * <code>repeated .ZMQAtomMessage results = 3;</code>
       *
       * <pre>
       * temporary, should merge with atom
       * </pre>
       */
      public java.util.List<org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage.Builder>
           getResultsBuilderList() {
        return getResultsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage, org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage.Builder, org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessageOrBuilder>
          getResultsFieldBuilder() {
        if (resultsBuilder_ == null) {
          resultsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage, org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessage.Builder, org.opencog.atomspace.AtomSpaceProtos.ZMQAtomMessageOrBuilder>(
                  results_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          results_ = null;
        }
        return resultsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:ZMQReplyMessage)
    }

    static {
      defaultInstance = new ZMQReplyMessage(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ZMQReplyMessage)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ZMQAttentionValueHolderMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ZMQAttentionValueHolderMessage_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ZMQVersionHandleMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ZMQVersionHandleMessage_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ZMQSingleTruthValueMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ZMQSingleTruthValueMessage_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ZMQTruthValueMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ZMQTruthValueMessage_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ZMQTrailMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ZMQTrailMessage_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ZMQAtomMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ZMQAtomMessage_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ZMQAtomRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ZMQAtomRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ZMQRequestMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ZMQRequestMessage_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ZMQReplyMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ZMQReplyMessage_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\021ZMQMessages.proto\"H\n\036ZMQAttentionValue" +
      "HolderMessage\022\013\n\003STI\030\001 \002(\005\022\013\n\003LTI\030\002 \002(\005\022" +
      "\014\n\004VLTI\030\003 \002(\005\"A\n\027ZMQVersionHandleMessage" +
      "\022\021\n\tindicator\030\001 \002(\r\022\023\n\013substantive\030\002 \002(\004" +
      "\"\232\002\n\032ZMQSingleTruthValueMessage\022*\n\016truth" +
      "valuetype\030\001 \002(\0162\022.ZMQTruthValueType\022\014\n\004m" +
      "ean\030\002 \001(\002\022\022\n\nconfidence\030\003 \001(\002\022\r\n\005count\030\004" +
      " \001(\002\022/\n\rversionHandle\030\005 \001(\0132\030.ZMQVersion" +
      "HandleMessage\022\t\n\001U\030\006 \001(\002\022\t\n\001L\030\007 \001(\002\022\027\n\017c" +
      "onfidenceLevel\030\010 \001(\002\022\021\n\tsymmetric\030\t \001(\005\022",
      "\014\n\004diff\030\n \001(\002\022\036\n\026firstOrderDistribution\030" +
      "\013 \003(\002\"M\n\024ZMQTruthValueMessage\0225\n\020singleT" +
      "ruthValue\030\001 \003(\0132\033.ZMQSingleTruthValueMes" +
      "sage\"1\n\017ZMQTrailMessage\022\017\n\007maxSize\030\001 \002(\005" +
      "\022\r\n\005trail\030\002 \003(\004\"\261\002\n\016ZMQAtomMessage\022\036\n\010at" +
      "omtype\030\001 \002(\0162\014.ZMQAtomType\022=\n\024attentionv" +
      "alueholder\030\002 \002(\0132\037.ZMQAttentionValueHold" +
      "erMessage\022\016\n\006handle\030\003 \002(\004\022\020\n\010incoming\030\004 " +
      "\003(\004\022\014\n\004type\030\005 \002(\005\022\r\n\005flags\030\006 \001(\005\022)\n\ntrut" +
      "hValue\030\007 \001(\0132\025.ZMQTruthValueMessage\022\014\n\004n",
      "ame\030\010 \001(\t\022\020\n\010outgoing\030\t \003(\004\022\037\n\005trail\030\n \001" +
      "(\0132\020.ZMQTrailMessage\022\025\n\ratom_type_str\030\013 " +
      "\001(\t\"}\n\016ZMQAtomRequest\022!\n\004kind\030\001 \002(\0162\023.ZM" +
      "QAtomRequestKind\022\016\n\006handle\030\002 \001(\004\022\021\n\tatom" +
      "_type\030\003 \001(\t\022\021\n\tnode_name\030\004 \001(\t\022\022\n\nhandle" +
      "_seq\030\005 \003(\004\"j\n\021ZMQRequestMessage\022\"\n\010funct" +
      "ion\030\001 \002(\0162\020.ZMQFunctionType\022\016\n\006handle\030\002 " +
      "\001(\004\022!\n\010requests\030\003 \003(\0132\017.ZMQAtomRequest\"`" +
      "\n\017ZMQReplyMessage\022\036\n\005atom2\030\001 \001(\0132\017.ZMQAt" +
      "omMessage\022\013\n\003str\030\002 \001(\t\022 \n\007results\030\003 \003(\0132",
      "\017.ZMQAtomMessage*\250\001\n\021ZMQTruthValueType\022\033" +
      "\n\027ZMQTruthValueTypeSimple\020\000\022\032\n\026ZMQTruthV" +
      "alueTypeCount\020\001\022\031\n\025ZMQTruthValueTypeNull" +
      "\020\002\022\037\n\033ZMQTruthValueTypeIndefinite\020\003\022\036\n\032Z" +
      "MQTruthValueTypeComposite\020\004*P\n\013ZMQAtomTy" +
      "pe\022\023\n\017ZMQAtomTypeNode\020\000\022\023\n\017ZMQAtomTypeLi" +
      "nk\020\001\022\027\n\023ZMQAtomTypeNotFound\020\002*2\n\022ZMQAtom" +
      "RequestKind\022\010\n\004UUID\020\000\022\010\n\004NODE\020\001\022\010\n\004LINK\020" +
      "\002*B\n\017ZMQFunctionType\022\016\n\nZMQgetAtom\020\000\022\016\n\n" +
      "ZMQgetName\020\001\022\017\n\013ZMQgetAtoms\020\002B*\n\025org.ope",
      "ncog.atomspaceB\017AtomSpaceProtosH\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_ZMQAttentionValueHolderMessage_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_ZMQAttentionValueHolderMessage_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ZMQAttentionValueHolderMessage_descriptor,
              new java.lang.String[] { "STI", "LTI", "VLTI", });
          internal_static_ZMQVersionHandleMessage_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_ZMQVersionHandleMessage_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ZMQVersionHandleMessage_descriptor,
              new java.lang.String[] { "Indicator", "Substantive", });
          internal_static_ZMQSingleTruthValueMessage_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_ZMQSingleTruthValueMessage_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ZMQSingleTruthValueMessage_descriptor,
              new java.lang.String[] { "Truthvaluetype", "Mean", "Confidence", "Count", "VersionHandle", "U", "L", "ConfidenceLevel", "Symmetric", "Diff", "FirstOrderDistribution", });
          internal_static_ZMQTruthValueMessage_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_ZMQTruthValueMessage_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ZMQTruthValueMessage_descriptor,
              new java.lang.String[] { "SingleTruthValue", });
          internal_static_ZMQTrailMessage_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_ZMQTrailMessage_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ZMQTrailMessage_descriptor,
              new java.lang.String[] { "MaxSize", "Trail", });
          internal_static_ZMQAtomMessage_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_ZMQAtomMessage_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ZMQAtomMessage_descriptor,
              new java.lang.String[] { "Atomtype", "Attentionvalueholder", "Handle", "Incoming", "Type", "Flags", "TruthValue", "Name", "Outgoing", "Trail", "AtomTypeStr", });
          internal_static_ZMQAtomRequest_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_ZMQAtomRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ZMQAtomRequest_descriptor,
              new java.lang.String[] { "Kind", "Handle", "AtomType", "NodeName", "HandleSeq", });
          internal_static_ZMQRequestMessage_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_ZMQRequestMessage_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ZMQRequestMessage_descriptor,
              new java.lang.String[] { "Function", "Handle", "Requests", });
          internal_static_ZMQReplyMessage_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_ZMQReplyMessage_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ZMQReplyMessage_descriptor,
              new java.lang.String[] { "Atom2", "Str", "Results", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
